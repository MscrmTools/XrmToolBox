<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhIAAgAKIHAHDhGjS6DCaxCRanBT/CD1LOEwCZAAAAACH/C05FVFNDQVBFMi4wAwEAAAAh+QQF
        CgAHACwAAAAAIAAgAAADiXi63AAtSvnUq8eYye09F6Rp3RR6yriVSgGhEpmu1FOwjGq6L56NHMDNt5AR
        j5HCENkwKpXMHPDggkZnzuX1t/VZuzMq4btVKcfgH4ncNaYnBELaGI+3p3V5eXqwg91vHQEBTIAMg4NH
        OhKIhESLjI4HAgITRoYTlJRhajREmpU6kEebnZx/niUJACH5BAUKAAcALAAAAAAgAB8AAAN6eLrc1TDK
        8lgVQWpFKV8BJmzT4X2HmJFLZbpNCK5RQcDsEey0c9y52U6DCw6DSA2BkJQEmIrlstkgPFdSKFVx1U63
        DCsYKRiNw8xy+RyVqs3nbArO/rI3gsG9MVDvF3l5fwt9g4YbA3qGiYmLjIeNCpGDjIp/lZCWTQkAIfkE
        BQoABwAsAAAAACAAHwAAA3d4utxXLkpGiCoEXj1lrc+RPUXZed+1FIB5KkGwgJH7AFMcvwzgcw2djKdo
        +XJDYhGobDIEAmfkqIBCpT0f7mCNYovaxfW7oJJfBsM5e0in1wctwK1ey9t1uBkuefMXdH8KgYJ4hYd9
        eX+Ei26HfoaFjHyTlIpNCQAh+QQFCgAHACwBAAAAHwAgAAADeni6zCItyiiGek8RMvsZ2IFB2+ZJVXVB
        R8mdn6WAk7kU06DLsFIQOMmO18MBc8TeIahsCpPOW3AYbRSuOGr1tpxCq9eteLwke5hmX1qCXrsdgfch
        IKC/63W5Xa6PvwOAfmuBgmIBL3OFTWEth4pRWDiOiFuRGo9gbR4JACH5BAUKAAcALAEAAAAfACAAAAN3
        eLrMZi3K+NSrR4jJz4Vfpm0ddVmQqJXogkWrEgRTyC7zLNn3kdO7VE8GHBodwiODQEC9lAcm03OCKqRN
        qnWZ3XqPhW+jQAiLF+HyGb1uSwrmNRzeLgDo9bhbDnAD/npfd3+CfQp3UIQHf4pWjH2PXpGLhpKVLAkA
        IfkEBQoABwAsAAABACAAHgAAA3R4utw9w8k5IaSY2pj748fljaFFetuJgmrrTgL7PkI9S3F8S4OwdwTC
        T2ELBn+1mlG4S/qOQ9uQEmDeoAdCNXA1KrZW13Kh/WGnmAC3VaCq16MCoT15wz3tuXshuDMKdAeBHQF9
        Pg2AgC2GfoKCgySFE4oUCQAh+QQFCgAHACwAAAEAIAAfAAADc3i63G3GyTkhpJjamPvjx+WNoUV624mC
        autW7PuJ8hzXCo1TALDnkV5vtxH6cKnhT/dzKGsCwcIIjUoPVJn1ij1Wm56ClxQI8HqFU7k8AYjHnbW5
        nVYU6g4CYcEO3+t3Cnp6LWKBBQSBg3uFgIh1hDuBIwkAIfkEBQoABwAsAAABAB8AHwAAA3J4ugzAMMro
        3Ly4PsyPVV93aWJJlmKIrixVtFhRwZMj09ON72jx8gyfD7gY/oiHIXIpUe4MBoWPcIRBoUlqtXWNJrdW
        L1NCIHDFkHJ51SWr2dfJWhEITLAKPKdeVwgEeXErfHZ/fwdtLH0HhoCIaDSHIgkAOw==
</value>
  </data>
</root>