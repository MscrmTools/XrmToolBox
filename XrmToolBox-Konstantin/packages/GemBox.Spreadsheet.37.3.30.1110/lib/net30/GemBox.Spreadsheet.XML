<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>GemBox.Spreadsheet</name>
  </assembly>
  <members>
    <member name="T:GemBox.Spreadsheet.AbstractRange">
      <summary>
            Base class for classes representing one or more excel cells.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.Comment">
      <summary>
            Gets is sets comment
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.Formula">
      <summary>
            Gets or sets formula string.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.IsStyleDefault">
      <summary>
            Returns <see langword="true" /> if all cells in <see cref="T:GemBox.Spreadsheet.AbstractRange" /> have default 
            cell style; otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.AbstractRange.SetBorders(GemBox.Spreadsheet.MultipleBorders,System.Drawing.Color,GemBox.Spreadsheet.LineStyle)">
      <summary>
            Sets borders on one or more excel cells, taking cell position into account.
            </summary>
      <param name="multipleBorders">Borders to set.</param>
      <param name="lineColor">Line color.</param>
      <param name="lineStyle">Line style.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.Style">
      <summary>
            Gets or sets cell style (<see cref="T:GemBox.Spreadsheet.CellStyle" />) on one or more excel cells.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.AbstractRange.Value">
      <summary>
            Gets or sets cell value on one or more excel cells.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.AnchorCell">
      <summary>
            Represents an anchor cell object used by <see cref="T:GemBox.Spreadsheet.ExcelPictureCollection" /> in the worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.#ctor(GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Initializes a new instance by using another anchor cell.
            </summary>
      <param name="anchorCell">Anchor cell to copy from.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.#ctor(GemBox.Spreadsheet.ExcelColumn,GemBox.Spreadsheet.ExcelRow,System.Boolean)">
      <summary>
            Initializes a new instance without using offset values.
            </summary>
      <param name="column">Column where the anchor is placed.</param>
      <param name="row">Row where the anchor is placed.</param>
      <param name="topLeft">If true, anchor will be placed in the top left corner of the anchor cell.
            Otherwise the anchor will be placed in the bottom right corner of the anchor cell.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.#ctor(GemBox.Spreadsheet.ExcelColumn,GemBox.Spreadsheet.ExcelRow,System.Int64,System.Int64)">
      <summary>
            Initializes a new instance by using offset values.
            </summary>
      <param name="column">Column where the anchor is placed.</param>
      <param name="row">Row where the anchor is placed.</param>
      <param name="columnOffset">Column offset for the anchor.</param>
      <param name="rowOffset">Row offset for the anchor.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.AnchorCell.Column">
      <summary>
            Gets or sets column for the anchor cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.AnchorCell.ColumnOffset">
      <summary>
            Gets or sets column offset for the anchor cell.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:GemBox.Spreadsheet.AnchorCell" /> is equal 
            to the current <see cref="T:GemBox.Spreadsheet.AnchorCell" />.
            </summary>
      <param name="obj">Object of <see cref="T:GemBox.Spreadsheet.AnchorCell" /> type.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:GemBox.Spreadsheet.AnchorCell" /> is equal 
            to the current <see cref="T:GemBox.Spreadsheet.AnchorCell" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.AnchorCell.GetHashCode">
      <summary>
            Gets the hash code for anchor object.
            </summary>
      <returns>Hash code.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.AnchorCell.Row">
      <summary>
            Gets or sets row for the anchor cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.AnchorCell.RowOffset">
      <summary>
            Gets or sets row offset for the anchor cell.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.BuiltInCellStyleName">
      <summary>
            Represents available built-in cell styles.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Normal">
      <summary>
            Normal built-in cell style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Good">
      <summary>
            Good built-in cell style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Bad">
      <summary>
            Bad built-in cell style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Neutral">
      <summary>
            Neutral built-in cell style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Note">
      <summary>
            Note built-in cell style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.LinkedCell">
      <summary>
            Linked Cell built-in cell style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Calculation">
      <summary>
            Calculation built-in cell style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.CheckCell">
      <summary>
            Check Cell built-in cell style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.ExplanatoryText">
      <summary>
            Explanatory Text built-in cell style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Heading1">
      <summary>
            Heading 1 built-in cell style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Heading2">
      <summary>
            Heading 2 built-in cell style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Heading3">
      <summary>
            Heading 3 built-in cell style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Heading4">
      <summary>
            Heading 4 built-in cell style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Input">
      <summary>
            Input built-in cell style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Output">
      <summary>
            Output built-in cell style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Title">
      <summary>
            Title built-in cell style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.WarningText">
      <summary>
            Warning text built-in cell style.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInCellStyleName.Total">
      <summary>
            Total built-in cell style.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.BuiltInDocumentProperties">
      <summary>
            Enumeration of available built-in document properties.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Title">
      <summary>
            Title of the document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Author">
      <summary>
            Name of the document's author.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Subject">
      <summary>
            Subject of the document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Comments">
      <summary>
            Document comments.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Category">
      <summary>
            Category of the document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Status">
      <summary>
            Status of the document.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Keywords">
      <summary>
            Document keywords.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.LastSavedBy">
      <summary>
            Name of the last author.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Manager">
      <summary>
            Manager.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.Company">
      <summary>
            Company.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.BuiltInDocumentProperties.HyperlinkBase">
      <summary>
            Base hyperlink.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CellBorder">
      <summary>
            Contains settings for a single cell border.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellBorder.LineColor">
      <summary>
            Gets or sets border line color.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellBorder.LineStyle">
      <summary>
            Gets or sets border line style.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellBorder.SetBorder(System.Drawing.Color,GemBox.Spreadsheet.LineStyle)">
      <summary>
            Sets both border line color and line style.
            </summary>
      <param name="lineColor">Border line color.</param>
      <param name="lineStyle">Border line style.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.CellBorders">
      <summary>
            Collection of cell borders (<see cref="T:GemBox.Spreadsheet.CellBorder" />).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellBorders.Item(GemBox.Spreadsheet.IndividualBorder)">
      <summary>
            Gets specific border.
            </summary>
      <param name="individualBorder">Border to get.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CellBorders.SetBorders(GemBox.Spreadsheet.MultipleBorders,System.Drawing.Color,GemBox.Spreadsheet.LineStyle)">
      <summary>
            Sets specific line color and line style on multiple borders.
            </summary>
      <param name="multipleBorders">Borders to set.</param>
      <param name="lineColor">Border line color.</param>
      <param name="lineStyle">Border line style.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.CellRange">
      <summary>
            Cell range is a rectangular group of worksheet cells.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Comment">
      <summary>
            Gets or sets comment
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.CopyTo(GemBox.Spreadsheet.ExcelWorksheet,System.Int32,System.Int32)">
      <summary>
            Copies this cell range to another worksheet.
            </summary>
      <param name="destinationWorksheet">Destination worksheet.</param>
      <param name="absoluteRow">Absolute index of the destination row.</param>
      <param name="absoluteColumn">Absolute index of the destination column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Destination range is invalid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.CopyTo(GemBox.Spreadsheet.ExcelWorksheet,System.String)">
      <summary>
            Copies this cell range to another worksheet.
            </summary>
      <param name="destinationWorksheet">Destination worksheet.</param>
      <param name="topLeftCell">Full name of the top-left cell of the destination range.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Destination range is invalid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.CopyTo(System.Int32,System.Int32)">
      <summary>
            Copies this cell range to another position in the same worksheet.
            </summary>
      <param name="absoluteRow">Absolute index of the destination row.</param>
      <param name="absoluteColumn">Absolute index of the destination column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Destination range is invalid.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.CopyTo(System.String)">
      <summary>
            Copies this cell range to another position in the same worksheet.
            </summary>
      <param name="topLeftCell">Full name of the top-left cell of the destination range.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Destination range is invalid.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.EndPosition">
      <summary>
            Gets name of the last (bottom-right) cell in this cell range.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:GemBox.Spreadsheet.CellRange" /> is equal 
            to the current <see cref="T:GemBox.Spreadsheet.CellRange" />.
            </summary>
      <param name="obj">Object of <see cref="T:GemBox.Spreadsheet.CellRange" /> type.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:GemBox.Spreadsheet.CellRange" /> is equal 
            to the current <see cref="T:GemBox.Spreadsheet.CellRange" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.FindText(System.String,System.Boolean,System.Boolean,System.Int32@,System.Int32@)">
      <summary>
            Finds the first occurrence of the specified text in the current cell range.
            </summary>
      <param name="text">Test to search.</param>
      <param name="matchCase">
        <see langword="true" /> to match exact case, <see langword="false" /> otherwise.</param>
      <param name="matchEntireCellContents">
        <see langword="true" /> to match entire cell contents, <see langword="false" /> otherwise.</param>
      <param name="row">Index of the row where the text was found or -1 if no text was found.</param>
      <param name="column">Index of the column where the text was found or -1 if no text was found.</param>
      <returns>
        <see langword="true" /> if text is found, <see langword="false" /> otherwise.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.FirstColumnIndex">
      <summary>
            Gets index of the first (leftmost) column.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.FirstRowIndex">
      <summary>
            Gets index of the first (topmost) row.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Formula">
      <summary>
            Gets or sets formula string.
            </summary>
      <exception cref="T:System.InvalidOperationException">Property get is attempted on a cell range 
            which is not merged.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetEnumerator">
      <summary>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (all cells).
            </summary>
      <returns>An enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (all cells).</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetHashCode">
      <summary>
            Returns the hash code of this object.
            </summary>
      <returns>Hash code.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetReadEnumerator">
      <summary>
            Returns enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (only allocated cells).
            </summary>
      <returns>An enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (only allocated cells).</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetSubrange(System.String,System.String)">
      <summary>
            Returns new cell range using start and end position.
            </summary>
      <param name="firstCell">Name of first (top-left) cell.</param>
      <param name="lastCell">Name of last (bottom-right) cell.</param>
      <returns>New cell range using start and end position.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Arguments are out of range.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetSubrangeAbsolute(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns new cell range using absolute indexing.
            </summary>
      <param name="firstRow">Absolute index of the first row.</param>
      <param name="firstColumn">Absolute index of the first column.</param>
      <param name="lastRow">Absolute index of the last row.</param>
      <param name="lastColumn">Absolute index of the last column.</param>
      <returns>New cell range using absolute indexing.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Arguments are out of range.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.GetSubrangeRelative(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns new cell range using relative indexing.
            </summary>
      <param name="relativeRow">Relative index of the first row.</param>
      <param name="relativeColumn">Relative index of the first column.</param>
      <param name="width">Width of new cell range in columns.</param>
      <param name="height">Height of new cell range in rows.</param>
      <returns>New cell range using relative indexing.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Arguments are out of range.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Height">
      <summary>
            Gets height of this cell range, in rows.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.IndexingMode">
      <summary>
            Gets indexing mode used for cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.IsAnyCellMerged">
      <summary>
            Returns <see langword="true" /> is any cell in this cell range is merged; otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.IsStyleDefault">
      <summary>
            Returns <see langword="true" /> if all cells in cell range or merged range have default 
            cell style; otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Item(System.Int32)">
      <summary>
            Gets excel cell at the specified index.
            </summary>
      <param name="contextIndex">The zero-based context index of the cell.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Item(System.Int32,System.Int32)">
      <summary>
            Gets excel cell at the specified relative position.
            </summary>
      <param name="relativeRow">The zero-based relative row position.</param>
      <param name="relativeColumn">The zero-based relative column position.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Item(System.String)">
      <summary>
            Gets excel cell with the specified full or partial name.
            </summary>
      <param name="contextName">Full or partial name of the cell.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.LastColumnIndex">
      <summary>
            Gets index of the last (rightmost) column.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.LastRowIndex">
      <summary>
            Gets index of the last (bottommost) row.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Merged">
      <summary>
            Gets or sets whether cells in this range are merged.
            </summary>
      <exception cref="T:System.ArgumentException">Merged range can't be created because some of the cells
            in the range are already merged.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Overlaps(GemBox.Spreadsheet.CellRange)">
      <summary>
            Checks if this cell range overlaps with another cell range.
            </summary>
      <param name="range">Cell range.</param>
      <returns>
        <see langword="true" /> if cell ranges overlap; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.PositionToRowColumn(System.String,System.Int32@,System.Int32@)">
      <summary>
            Converts position string ("A1", "BN27", etc.) to row and column index.
            </summary>
      <param name="position">Position string.</param>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.RowColumnToPosition(System.Int32,System.Int32)">
      <summary>
            Converts row and column index to position string ("A1", "BN27", etc.).
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <returns>Position string.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.SetBorders(GemBox.Spreadsheet.MultipleBorders,System.Drawing.Color,GemBox.Spreadsheet.LineStyle)">
      <summary>
            Sets borders on one or more excel cells, taking cell position into account.
            </summary>
      <param name="multipleBorders">Borders to set.</param>
      <param name="lineColor">Line color.</param>
      <param name="lineStyle">Line style.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Sort(GemBox.Spreadsheet.SortDescription[])">
      <summary>
            Sorts the rows of this <see cref="T:GemBox.Spreadsheet.CellRange" /> by comparing values of <see cref="T:GemBox.Spreadsheet.ExcelCell" />s in columns specified by <paramref name="sortDescriptions" />.
            </summary>
      <param name="sortDescriptions">The sort descriptions that specify columns by which to sort.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.Sort(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.SortDescription})">
      <summary>
            Sorts the rows of this <see cref="T:GemBox.Spreadsheet.CellRange" /> by comparing values of <see cref="T:GemBox.Spreadsheet.ExcelCell" />s in columns specified by <paramref name="sortDescriptions" />.
            </summary>
      <param name="sortDescriptions">The sort descriptions that specify columns by which to sort.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.StartPosition">
      <summary>
            Gets name of the first (top-left) cell in this cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Style">
      <summary>
            Gets or sets cell style (<see cref="T:GemBox.Spreadsheet.CellStyle" />) on one or more excel cells.
            </summary>
      <exception cref="T:System.InvalidOperationException">Property get is attempted on a cell range 
            which is not merged.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (all cells).
            </summary>
      <returns>An enumerator for the <see cref="T:GemBox.Spreadsheet.CellRange" /> (all cells).</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRange.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:GemBox.Spreadsheet.CellRange" />.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents the current <see cref="T:GemBox.Spreadsheet.CellRange" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Value">
      <summary>
            Gets or sets cell value on one or more excel cells.
            </summary>
      <exception cref="T:System.InvalidOperationException">Property get is attempted on a cell range 
            which is not merged.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRange.Width">
      <summary>
            Gets width of this cell range, in columns.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CellRangeCollection">
      <summary>
            A collection of <see cref="T:GemBox.Spreadsheet.CellRange" /> items.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRangeCollection.Add(GemBox.Spreadsheet.ExcelWorksheet,System.String)">
      <summary>
            Adds the <see cref="T:GemBox.Spreadsheet.CellRange" /> from the specified worksheet to the collection.
            </summary>
      <param name="worksheet">The worksheet.</param>
      <param name="cellReference">The cell reference for which to create <see cref="T:GemBox.Spreadsheet.CellRange" />.</param>
      <returns>An instance of the <see cref="T:GemBox.Spreadsheet.CellRange" /> that was added to the collection.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.CellRangeEnumerator">
      <summary>
            Enumerator used for iterating cells in a <see cref="T:GemBox.Spreadsheet.CellRange" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRangeEnumerator.Current">
      <summary>
            Gets the current <see cref="T:GemBox.Spreadsheet.ExcelCell" /> in the cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRangeEnumerator.CurrentColumn">
      <summary>
            Current absolute column index in the cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRangeEnumerator.CurrentRow">
      <summary>
            Current absolute row index in the cell range.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRangeEnumerator.MoveNext">
      <summary>
            Advances the enumerator to the next element of the cell range.
            </summary>
      <returns>
        <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if 
            the enumerator has passed the end of the cell range.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRangeEnumerator.Parent">
      <summary>
            Parent <see cref="T:GemBox.Spreadsheet.CellRange" />. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellRangeEnumerator.Reset">
      <summary>
            Sets the enumerator to its initial position, which is one column before 
            the first cell in the cell range.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellRangeEnumerator.System#Collections#IEnumerator#Current">
      <summary>
            Gets the current <see cref="T:GemBox.Spreadsheet.ExcelCell" /> in the cell range.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CellStyle">
      <summary>
            Contains settings specifying how the cell data will be displayed.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyle.#ctor">
      <summary>
            Creates new cell style with default values (Arial font with size 200).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyle.#ctor(GemBox.Spreadsheet.ExcelFile)">
      <summary>
            Creates new cell style with default values (copies default font from ExcelFile object).
            </summary>
      <param name="ef">ExcelFile object.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Borders">
      <summary>
            Gets or sets cell borders (<see cref="T:GemBox.Spreadsheet.CellBorder" />).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.FillPattern">
      <summary>
            Get or sets fill pattern.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Font">
      <summary>
            Gets or sets font related settings.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.FormulaHidden">
      <summary>
            Gets or sets whether the formula is hidden in the formula bar when the cell is selected.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment">
      <summary>
            Gets or sets horizontal alignment.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Indent">
      <summary>
            Gets or sets cell data indentation.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is out of range.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.IsDefault">
      <summary>
            Returns <see langword="true" /> if cell style is default; otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.IsTextVertical">
      <summary>
            Gets or sets whether the cell text is displayed in a vertical style.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Locked">
      <summary>
            Gets or sets if the cell is locked.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Name">
      <summary>
            Gets the style name.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.NumberFormat">
      <summary>
            Gets or sets format string that will be used to interpret and display cell value.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.QuotePrefix">
      <summary>
            Gets or sets if the cell text should be prefixed by a single quote mark (e.g., 'text).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.Rotation">
      <summary>
            Gets or sets cell data rotation.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not between -90 and 90.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.ShrinkToFit">
      <summary>
            Gets or sets if the cell text is shrunk to fit the cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment">
      <summary>
            Gets or sets vertical alignment.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyle.WrapText">
      <summary>
            Gets or sets if the text is wrapped.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CellStyleCollection">
      <summary>
            Represents a collection of named (master) <see cref="T:GemBox.Spreadsheet.CellStyle" />s.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyleCollection.Add(System.String)">
      <summary>
            Adds an empty <see cref="T:GemBox.Spreadsheet.CellStyle" /> instance to the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" />.
            </summary>
      <param name="name">The name of new <see cref="T:GemBox.Spreadsheet.CellStyle" /> instance.</param>
      <returns>New <see cref="T:GemBox.Spreadsheet.CellStyle" /> instance that is added to this collection.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyleCollection.Contains(System.String)">
      <summary>
            Determines whether the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" /> contains a <see cref="T:GemBox.Spreadsheet.CellStyle" /> instance with specific name.
            </summary>
      <param name="styleName">Name of the <see cref="T:GemBox.Spreadsheet.CellStyle" /> to locate in the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" />.</param>
      <returns>
        <see langword="true" /> if <see cref="T:GemBox.Spreadsheet.CellStyle" /> instance with speficic name is found in the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" />; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyleCollection.Count">
      <summary>
            Gets the number of <see cref="T:GemBox.Spreadsheet.CellStyle" />s contained in the collection. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyleCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" />.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1">IEnumerator&gt;CellStyle&lt;</see> that can be used to iterate through the <see cref="T:GemBox.Spreadsheet.CellStyleCollection" />.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyleCollection.Item(GemBox.Spreadsheet.BuiltInCellStyleName)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.CellStyle" /> that corresponds to given <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName">styleName</see>.
            </summary>
      <param name="styleName">The <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName" /> of the <see cref="T:GemBox.Spreadsheet.CellStyle" />.</param>
      <returns>
        <see cref="T:GemBox.Spreadsheet.CellStyle" /> that corresponds to given <see cref="T:GemBox.Spreadsheet.BuiltInCellStyleName">styleName</see>.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.CellStyleCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.CellStyle" /> that corresponds to given name.
            </summary>
      <param name="styleName">The name of the <see cref="T:GemBox.Spreadsheet.CellStyle" />.</param>
      <returns>
        <see cref="T:GemBox.Spreadsheet.CellStyle" /> that corresponds to given name.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.CellStyleCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ColumnTypeResolution">
      <summary>
            Defines resolution method that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>. 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.Object">
      <summary>
            All columns will be of type <see cref="T:System.Object" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.StringInvariantCulture">
      <summary>
            All columns  will be of type <see cref="T:System.String" />. For conversion from some <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> to string <see cref="P:System.Globalization.CultureInfo.InvariantCulture">
            invariant culture</see> will be used.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.StringCurrentCulture">
      <summary>
            All columns  will be of type <see cref="T:System.String" />. For conversion from some <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> to string <see cref="P:System.Globalization.CultureInfo.CurrentCulture">
            current culture</see> will be used.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.Auto">
      <summary>
            If all values in some column have the same type then that type will be used for <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>, otherwise
            column will be of type <see cref="T:System.Object" />. 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.AutoPreferStringInvariantCulture">
      <summary>
            If all values in some column have the same type then that type will be used for <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>, otherwise
            column will be of type <see cref="T:System.String" />. For conversion from some <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> to string <see cref="P:System.Globalization.CultureInfo.InvariantCulture">
            invariant culture</see> will be used.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ColumnTypeResolution.AutoPreferStringCurrentCulture">
      <summary>
            If all values in some column have the same type then that type will be used for <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>, otherwise
            column will be of type <see cref="T:System.String" />. For conversion from some <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> to string <see cref="P:System.Globalization.CultureInfo.CurrentCulture">
            current culture</see> will be used.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ComHelper">
      <summary>
            Contains methods that can be useful for users which are calling GemBox.Spreadsheet component using COM interop.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.ComHelper" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ComHelper.ComSetLicense(System.String)">
      <summary>
            Call this method from your application to set GemBox.Spreadsheet serial key.
            </summary>
      <param name="serialKey">Serial key.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.CreateDataTableOptions">
      <summary>
            Represents options creating <see cref="T:System.Data.DataTable" /> and filling it with values from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CreateDataTableOptions.#ctor">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.CreateDataTableOptions" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CreateDataTableOptions.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.CreateDataTableOptions" /> class.
            </summary>
      <param name="startRow">Index of the first row of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="startColumn">Index of the first column of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfRows">Number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfColumns">Number of columns being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CreateDataTableOptions.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.CreateDataTableOptions" /> class.
            </summary>
      <param name="startCell">Name of the first (top left) cell of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfRows">Number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfColumns">Number of columns being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.ColumnHeaders">
      <summary>
            Gets or sets a value indicating whether to use first row of extracted data for column headers.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.ColumnIndexes">
      <summary>
            Gets a list of indexes of columns which will be extracted.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.ExtractDataOptions">
      <summary>
            Gets or sets <see cref="P:GemBox.Spreadsheet.CreateDataTableOptions.ExtractDataOptions" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.NumberOfColumns">
      <summary>
            Gets or sets the number of columns being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.NumberOfRows">
      <summary>
            Gets or sets the number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.Resolution">
      <summary>
            Gets or sets the resolution type that specifies how column types will be resolved in created <see cref="T:System.Data.DataTable" />,
            see <see cref="T:GemBox.Spreadsheet.ColumnTypeResolution" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.StartColumn">
      <summary>
            Gets or sets the index of the first column of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CreateDataTableOptions.StartRow">
      <summary>
            Gets or sets the index of the first row of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.CsvLoadOptions">
      <summary>
            Represents options for loading from Character Separated Values file format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CsvLoadOptions.#ctor(GemBox.Spreadsheet.CsvType)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.CsvLoadOptions" /> class.
            </summary>
      <param name="csvType">Value delimiter, <see cref="T:GemBox.Spreadsheet.CsvType" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CsvLoadOptions.#ctor(System.Char)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.CsvLoadOptions" /> class.
            </summary>
      <param name="separator">Character that will serve as value delimiter.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.AllowNewLineInQuotes">
      <summary>
            Gets or sets a value indicating whether a new line character can be inside quotes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.Encoding">
      <summary>
            Gets or sets the encoding for the CSV file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.ParseFormatProvider">
      <summary>
            Gets or sets the format provider for the CSV file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.ParseNumbers">
      <summary>
            Gets or sets a value indicating whether numbers will be parsed and stored as <see cref="T:System.Double" /> value when loading CSV file. If <see langword="false" />, numbers will be loaded as strings.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.Separator">
      <summary>
            Gets or sets character that serves as value delimiter.
            </summary>
      <exception cref="T:System.ArgumentException">Value is set to quote '"' or new line '\n'.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvLoadOptions.Type">
      <summary>
            Gets or sets value delimiter type, see <see cref="T:GemBox.Spreadsheet.CsvType" />.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.CsvSaveOptions">
      <summary>
            Represents options for saving to Character Separated Values file format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.CsvSaveOptions.#ctor(GemBox.Spreadsheet.CsvType)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.CsvSaveOptions" /> class.
            </summary>
      <param name="csvType">Value delimiter, <see cref="T:GemBox.Spreadsheet.CsvType" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.CsvSaveOptions.#ctor(System.Char)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.CsvSaveOptions" /> class.
            </summary>
      <param name="separator">Character that will serve as value delimiter.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.AlwaysQuoteValues">
      <summary>
            Gets or sets a value indicating whether values in CSV file will always be quoted. Default value is false.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.Encoding">
      <summary>
            Gets or sets the encoding for the CSV file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.FormatProvider">
      <summary>
            Gets or sets the format provider for the CSV file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to CSV file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.Separator">
      <summary>
            Gets or sets character that serves as value delimiter.
            </summary>
      <exception cref="T:System.ArgumentException">Value is set to quote '"' or new line '\n'.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.CsvSaveOptions.Type">
      <summary>
            Gets or sets value delimiter type, see <see cref="T:GemBox.Spreadsheet.CsvType" />.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.CsvType">
      <summary>
            Formatting type for CSV files.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CsvType.CommaDelimited">
      <summary>
            Comma delimited CSV (most frequently used). 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CsvType.SemicolonDelimited">
      <summary>
            Semicolon delimited CSV (used by Excel if current culture specifies comma as decimal separator).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.CsvType.TabDelimited">
      <summary>
            Tab delimited CSV.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs">
      <summary>
            Arguments for <see cref="E:GemBox.Spreadsheet.InsertDataTableOptions.DataTableCellToExcelCellConverting" /> event.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTable">
      <summary>
            Gets the source <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTable" /></summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTableColumnIndex">
      <summary>
            Gets the source column index in <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTable" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTableRowIndex">
      <summary>
            Gets the source row index in <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTable" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTableValue">
      <summary>
            Gets the source value from <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.DataTable" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelCell">
      <summary>
            Gets the destination <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelCell" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelCellValue">
      <summary>
            Gets or sets the value which will be inserted into destination <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelCell" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelColumnIndex">
      <summary>
            Gets the destination column index in <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelRowIndex">
      <summary>
            Gets the destination row index in <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelWorksheet">
      <summary>
            Gets the destination <see cref="P:GemBox.Spreadsheet.DataTableCellToExcelCellConvertingEventArgs.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DataValidation">
      <summary>
            A single item of data validation defined on ranges of the worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidation.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DataValidation" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidation.#ctor(GemBox.Spreadsheet.CellRange[])">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DataValidation" /> class with specified cell ranges on which this data validation will be applied.
            </summary>
      <param name="cellRanges">The cell ranges on which this data validation will be applied.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidation.#ctor(GemBox.Spreadsheet.ExcelWorksheet,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DataValidation" /> class with specified worksheet and cell references on which this data validation will be applied.
            </summary>
      <param name="worksheet">The worksheet that will be used to initialize <see cref="T:GemBox.Spreadsheet.CellRange" />s that will be added to the <see cref="P:GemBox.Spreadsheet.DataValidation.CellRanges" /> collection of this data validation.</param>
      <param name="cellReferences">The cell references from which to create <see cref="T:GemBox.Spreadsheet.CellRange" />s.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidation.#ctor(GemBox.Spreadsheet.ExcelWorksheet,System.String[])">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DataValidation" /> class with specified worksheet and cell references on which this data validation will be applied.
            </summary>
      <param name="worksheet">The worksheet that will be used to initialize <see cref="T:GemBox.Spreadsheet.CellRange" />s that will be added to the <see cref="P:GemBox.Spreadsheet.DataValidation.CellRanges" /> collection of this data validation.</param>
      <param name="cellReferences">The cell references from which to create <see cref="T:GemBox.Spreadsheet.CellRange" />s.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DataValidation.#ctor(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.CellRange})">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.DataValidation" /> class with specified cell ranges on which this data validation will be applied.
            </summary>
      <param name="cellRanges">The cell ranges on which this data validation will be applied.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.CellRanges">
      <summary>
            Gets the ranges over which data validation is applied.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.ErrorMessage">
      <summary>
            Gets or sets the message text of error alert.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.ErrorStyle">
      <summary>
            Gets or sets the style of error alert used for this data validation.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.ErrorTitle">
      <summary>
            Gets or sets the title bar text of error alert.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.Formula1">
      <summary>
            Gets or sets the first formula in the DataValidation dropdown.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.Formula2">
      <summary>
            Gets or sets the second formula in the DataValidation dropdown.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.IgnoreBlank">
      <summary>
            Gets or sets a value indicating whether the data validation treats empty or blank entries as 
            valid. <see langword="true" /> means empty entries are OK and do not violate the validation constraints.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.InCellDropdown">
      <summary>
            Gets or sets a value indicating whether to display the dropdown combo box for a <see cref="F:GemBox.Spreadsheet.DataValidationType.List" /> data validation type.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.InputMessage">
      <summary>
            Gets or sets the message text of input prompt.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.InputMessageTitle">
      <summary>
            Gets or sets the title bar text of input prompt.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.Operator">
      <summary>
            Gets or sets the relational operator used with this data validation.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.ShowErrorAlert">
      <summary>
            Gets or sets a value indicating whether to display the error alert message when an invalid
            value has been entered, according to the criteria specified.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.ShowInputMessage">
      <summary>
            Gets or sets a value indicating whether to display the input prompt message.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DataValidation.Type">
      <summary>
            Gets or sets the type of data validation.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DataValidationCollection">
      <summary>
            A collection of <see cref="T:GemBox.Spreadsheet.DataValidation" /> items.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DataValidationErrorStyle">
      <summary>
            The style of data validation error alert.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationErrorStyle.Stop">
      <summary>
            This data validation error style uses a stop icon in the error alert.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationErrorStyle.Warning">
      <summary>
            This data validation error style uses a warning icon in the error alert.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationErrorStyle.Information">
      <summary>
            This data validation error style uses an information icon in the error alert.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DataValidationOperator">
      <summary>
            The relational operator used in data validation.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.Between">
      <summary>
            Data validation which checks if a value is between two other values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.NotBetween">
      <summary>
            Data validation which checks if a value is not between two other values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.Equal">
      <summary>
            Data validation which checks if a value is equal to a specified value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.NotEqual">
      <summary>
            Data validation which checks if a value is not equal to a specified value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.LessThan">
      <summary>
            Data validation which checks if a value is less than a specified value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.LessThanOrEqual">
      <summary>
            Data validation which checks if a value is less than or equal to a specified value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.GreaterThan">
      <summary>
            Data validation which checks if a value is greater than a specified value.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationOperator.GreaterThanOrEqual">
      <summary>
            Data validation which checks if a value is greater than or equal to a specified value.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DataValidationType">
      <summary>
            Specifies the type of data validation used to validate user input.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.None">
      <summary>
            No data validation.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.WholeNumber">
      <summary>
            Data validation which checks for whole number values satisfying the given condition.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.Decimal">
      <summary>
            Data validation which checks for decimal values satisfying the given condition.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.List">
      <summary>
            Data validation which checks for a value matching one of list of values.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.Date">
      <summary>
            Data validation which checks for date values satisfying the given condition.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.Time">
      <summary>
            Data validation which checks for time values satisfying the given condition.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.TextLength">
      <summary>
            Data validation which checks for text values, whose length satisfies the given condition.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.DataValidationType.Custom">
      <summary>
            Data validation which uses a custom formula to check the cell value.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DefinedName">
      <summary>
            Defined name class describes defined name that is not directly related with one cell range.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedName.LocalSheetIndex">
      <summary>
            Gets or sets the local sheet index of the defined name.
            If the local sheet index is -1, defined name is global.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedName.Name">
      <summary>
            Gets or sets the name of the defined name object.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedName.Value">
      <summary>
            Gets or sets the value of the defined name.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.DefinedNameCollection">
      <summary>
            Collection of defined names that are not directly related with one cell range.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.AddDefinedName(System.String,System.String,System.Int32)">
      <summary>
            Adds defined name to collection and returns index of that defined name.
            </summary>
      <param name="name">Name of the defined name.</param>
      <param name="value">Range string.</param>
      <param name="localSheetIndex">Local sheet index. If the value is -1, defined name is global.</param>
      <returns>Index of the defined name.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.Clear">
      <summary>
            Removes all elements from defined names collection.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedNameCollection.Count">
      <summary>
            Returns the number of defined names in collection.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.GetEnumerator">
      <summary>
            Returns an <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the collection. 
            </summary>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the collection. 
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedNameCollection.Item(System.Int32)">
      <summary>
            Gets or sets defined name described by index from collection.
            </summary>
      <param name="index">Index of the defined name.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.DefinedNameCollection.Item(System.String)">
      <summary>
            Gets defined name described by name from collection.
            </summary>
      <param name="definedName">Name of the defined name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.RemoveDefinedName(System.String)">
      <summary>
            Removes the defined name described by name from collection.
            </summary>
      <param name="definedName">Name of the defined name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.RemoveDefinedNameAt(System.Int32)">
      <summary>
            Removes the defined name described by index from collection.
            </summary>
      <param name="index">Index of the defined name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.DefinedNameCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an <see cref="T:System.Collections.IEnumerator" /> for the collection. 
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> for the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.DocumentProperties">
      <summary>
            Contains a collection of built-in and custom document properties.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DocumentProperties.BuiltIn">
      <summary>
            Gets a collection of built-in document properties.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.DocumentProperties.Custom">
      <summary>
            Gets a collection of custom document properties.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.DocumentProperties.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:GemBox.Spreadsheet.DocumentProperties" />.
            </summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:GemBox.Spreadsheet.DocumentProperties" />.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelCell">
      <summary>
            Excel cell provides access to a single worksheet cell or to a merged range if the cell is merged.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Comment">
      <summary>
            Gets or sets cell comment.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.ConvertExcelNumberToDateTime(System.Double,System.Boolean)">
      <summary>
            Converts Excel floating-point number to <see cref="T:System.DateTime" /> structure.
            </summary>
      <param name="num">Excel floating-point number.</param>
      <param name="use1904DateSystem">True to use 1904 date system.</param>
      <returns>Converted DateTime structure.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Formula">
      <summary>
            Gets or sets cell formula string.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.GetFormattedValue">
      <summary>
            Converts <see cref="P:GemBox.Spreadsheet.ExcelCell.Value">cell value</see> of this <see cref="T:GemBox.Spreadsheet.ExcelCell" /> instance to string representation using <see cref="P:GemBox.Spreadsheet.CellStyle.NumberFormat">number format</see> 
            that is specified on this <see cref="T:GemBox.Spreadsheet.ExcelCell" /> instance.
            </summary>
      <returns>Formatted <see cref="P:GemBox.Spreadsheet.ExcelCell.Value">cell value.</see></returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.HasComment">
      <summary>
            If cell has comment returns true, else returns false.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.HasHyperlink">
      <summary>
            If cell has hyperlink returns true, else returns false.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Hyperlink">
      <summary>
            Gets or sets cell hyperlink.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.IsStyleDefault">
      <summary>
            Returns <see langword="true" /> if style is default; otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.MergedRange">
      <summary>
            Returns associated merged range if the cell is merged; otherwise, <see langword="null" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCell.SetBorders(GemBox.Spreadsheet.MultipleBorders,System.Drawing.Color,GemBox.Spreadsheet.LineStyle)">
      <summary>
            Sets borders on this cell or on merged range if this cell is merged.
            </summary>
      <param name="multipleBorders">Borders to set.</param>
      <param name="lineColor">Line color.</param>
      <param name="lineStyle">Line style.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Style">
      <summary>
            Gets or sets cell style (<see cref="T:GemBox.Spreadsheet.CellStyle" />) of this cell or 
            of merged range if this cell is merged.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCell.Value">
      <summary>
            Gets or sets value of this cell or of merged range if this cell is merged.
            </summary>
      <exception cref="T:System.NotSupportedException">Value is not supported.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelCellCollection">
      <summary>
            Collection of excel cells (<see cref="T:GemBox.Spreadsheet.ExcelCell" />).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelCellCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellCollection.Item(System.Int32)">
      <summary>
            Gets the cell with the specified index.
            </summary>
      <param name="index">The zero-based index of the cell.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs">
      <summary>
            Arguments for <see cref="E:GemBox.Spreadsheet.ExtractToDataTableOptions.ExcelCellToDataTableCellConverting" /> event.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.Action">
      <summary>
            Gets or sets the action which will be executed after event, see <see cref="T:GemBox.Spreadsheet.ExtractDataEventAction" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable">
      <summary>
            Gets the destination <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable" /></summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTableColumnIndex">
      <summary>
            Gets the destination column index in <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTableColumnType">
      <summary>
            Gets the destination column type in <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTableValue">
      <summary>
            Gets or sets the value which will be inserted into destination <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable" /> cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelCellValue">
      <summary>
            Gets the source value from <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelColumnIndex">
      <summary>
            Gets the source column index in <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelRowIndex">
      <summary>
            Gets the source row index in <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelWorksheet">
      <summary>
            Gets the source <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.IsDataTableValueValid">
      <summary>
            Gets a value indication whether current <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTableValue" /> can be converted into <see cref="P:GemBox.Spreadsheet.ExcelCellToDataTableCellConvertingEventArgs.DataTable" /> cell.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelColumn">
      <summary>
            Excel column contains column options and cell range with column cells.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.AutoFit">
      <summary>
            Automatically fits column width to the minimum size required for all data in the column to be visible.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.AutoFit(System.Double)">
      <summary>
            Automatically fits column width to the minimum size required for all data in the column to be visible.
            </summary>
      <param name="scaling">Scaling factor.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.AutoFit(System.Double,GemBox.Spreadsheet.ExcelRow,GemBox.Spreadsheet.ExcelRow)">
      <summary>
            Automatically fits column width by checking only the cells in the column that are specified by row range.
            </summary>
      <param name="scaling">Scaling factor.</param>
      <param name="firstRow">First row.</param>
      <param name="lastRow">Last row.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.AutoFitAdvanced(System.Single)">
      <summary>
            Automatically fits column width to the minimum size required for all data in the column to be visible.
            </summary>
      <param name="scaling">Scaling factor.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.AutoFitAdvanced(System.Single,GemBox.Spreadsheet.ExcelRow,GemBox.Spreadsheet.ExcelRow)">
      <summary>
            Automatically fits column width by checking only the cells in the column that are specified by row range.
            </summary>
      <param name="scaling">Scaling factor.</param>
      <param name="firstRow">First row.</param>
      <param name="lastRow">Last row.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumn.Cells">
      <summary>
            Gets cell range with column cells.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.Delete">
      <summary>
            Deletes this column from the worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.InsertCopy(System.Int32,GemBox.Spreadsheet.ExcelColumn)">
      <summary>
            Inserts specified number of copied columns before the current column.
            </summary>
      <param name="columnCount">Number of columns to insert.</param>
      <param name="sourceColumn">Source column to copy.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumn.InsertEmpty(System.Int32)">
      <summary>
            Inserts specified number of empty columns before the current column.
            </summary>
      <param name="columnCount">Number of columns to insert.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumn.Width">
      <summary>
            Gets or sets column width.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelColumnCollection">
      <summary>
            Collection of excel columns (<see cref="T:GemBox.Spreadsheet.ExcelColumn" />).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.ColumnIndexToName(System.Int32)">
      <summary>
            Converts column index (0, 1, ...) to column name ("A", "B", ...).
            </summary>
      <param name="columnIndex">Column index.</param>
      <returns>Column name for the specified index.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelColumnCollection.ColumnNameToIndex(System.String)">
      <summary>
            Converts column name ("A", "B", ...) to column index (0, 1, ...).
            </summary>
      <param name="name">Column name.</param>
      <returns>Column index for the specified name.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelColumnRowBase">
      <summary>
            Base class for the excel column and row classes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.Collapsed">
      <summary>
            Gets or sets whether object is collapsed in outlining.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.Hidden">
      <summary>
            Gets or sets whether excel object is hidden.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.Index">
      <summary>
            Gets the index.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.IsStyleDefault">
      <summary>
            Returns <see langword="true" /> if style is default; otherwise, <see langword="false" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.OutlineLevel">
      <summary>
            Gets or sets outline level.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is out of 0 to 7 range.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelColumnRowBase.Style">
      <summary>
            Gets or sets cell style (<see cref="T:GemBox.Spreadsheet.CellStyle" />) for contained cells.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelComment">
      <summary>
            Represents a comment object used by <see cref="P:GemBox.Spreadsheet.ExcelCell.Comment" /> in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.Author">
      <summary>
            Gets or sets comment author.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.BottomRightCell">
      <summary>
            Gets or sets the bottom right anchor cell for the comment shape.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.IsVisible">
      <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.Text">
      <summary>
            Gets the comment text assigned to excel cell
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelComment.TopLeftCell">
      <summary>
            Gets or sets the top left anchor cell for the comment shape.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelFile">
      <summary>
            Excel file contains one or more worksheets (<see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />)
            and workbook related properties and methods.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.#ctor">
      <summary>
            Initializes an empty (no worksheets) instance of the ExcelFile class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.AutoDetectCsvSeparator(System.IO.Stream)">
      <summary>
            Autodetects CSV separator. If there's no separators in the input stream returns (char)0. 
            </summary>
      <param name="stream">Input Stream.</param>
      <returns>Char that is CSV separator. If there's no separators in the input StreamReader returns (char)0, 
            and if there are two with equal number of occurance, returns first of them.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.AutoDetectCsvSeparator(System.IO.StreamReader,System.Int32,System.Char[])">
      <summary>
            Autodetects CSV separator. If there's no separators in the input stream returns (char)0. 
            </summary>
      <param name="sr">Input StreamReader.</param>
      <param name="rowsToTest">Number of rows to test.</param>
      <param name="possibleSeparators">Chars that can be CSV separators.</param>
      <returns>Char that is CSV separator. If there's no separators in the input StreamReader returns (char)0, 
            and if there are two with equal number of occurance, returns first of them.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.ClosePreservedXlsx">
      <summary>
            Closes preserved XLSX file handle if needed 
            (<see cref="F:GemBox.Spreadsheet.XlsxOptions.PreserveKeepOpen">XlsxOptions.PreserveKeepOpen</see> was
            used with <see cref="M:GemBox.Spreadsheet.ExcelFile.LoadXlsx(System.String,GemBox.Spreadsheet.XlsxOptions)">
            ExcelFile.LoadXlsx(string,XlsxOptions)</see> method). <b>(.NET 3.0 and greater only)</b></summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.ConvertToImageSource(GemBox.Spreadsheet.ImageSaveOptions)">
      <summary>
            Converts single page specified in <paramref name="options" /> of this <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance to an <see cref="T:System.Windows.Media.ImageSource" /> instance.
            </summary>
      <param name="options">The options used when converting a single spreadsheet's page to an image.</param>
      <returns>A new <see cref="T:System.Windows.Media.ImageSource" /> instance created from a single spreadsheet's page specified in <paramref name="options" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.ConvertToXpsDocument(GemBox.Spreadsheet.XpsSaveOptions)">
      <summary>
            Converts this <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance to an <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> instance.
            </summary>
      <param name="options">The options used when converting to XML Paper Specification (XPS) document.</param>
      <returns>A New <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> instance created from this <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.CsvAllowNewlineInQuotes">
      <summary>
            Gets or sets whether SaveCsv() methods will allow newline in quotes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.CsvAlwaysQuoteValues">
      <summary>
            Gets or sets whether SaveCsv() methods will always put values in quotes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.CsvParseNumbersDuringLoad">
      <summary>
            Gets or sets whether LoadCsv() methods will try to convert text values to numbers.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.DefaultFontName">
      <summary>
            Gets or sets name of the default font used in the workbook.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.DefaultFontSize">
      <summary>
            Gets or sets default font size.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.DefinedNames">
      <summary>
            Gets the collection of defined names that are not directly related with one cell range.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.DelayFormulaParse">
      <summary>
            Delays formula parsing until one of SaveXls methods is called.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.DocumentProperties">
      <summary>
            Gets <see cref="P:GemBox.Spreadsheet.ExcelFile.DocumentProperties" /> of this <see cref="T:GemBox.Spreadsheet.ExcelFile" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.GroupMethodsAffectedCellsLimit">
      <summary>
            Maximum number of affected cells in group set methods.
            </summary>
    </member>
    <member name="E:GemBox.Spreadsheet.ExcelFile.IoWarning">
      <summary>
            Fired for unexpected situations when reading or writing XLS / CSV files.
            </summary>
    </member>
    <member name="E:GemBox.Spreadsheet.ExcelFile.LimitNear">
      <summary>
            Occurs when the size of XLS / CSV file in reading / writing is near <b>GemBox.Spreadsheet</b> free limit.
            </summary>
    </member>
    <member name="E:GemBox.Spreadsheet.ExcelFile.LimitReached">
      <summary>
            Occurs when the size of XLS / CSV file in reading / writing is above <b>GemBox.Spreadsheet</b> free limit.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Load(System.IO.Stream,GemBox.Spreadsheet.LoadOptions)">
      <summary>
            Loads a spreadsheet from the specified stream.
            </summary>
      <param name="stream">The stream from which to load a spreadsheet.</param>
      <param name="options">The loading options which can be used to define settings for load operation.</param>
      <returns>A loaded spreadsheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Load(System.IO.TextReader,GemBox.Spreadsheet.CsvLoadOptions)">
      <summary>
            Loads a spreadsheet from CSV data using the specified reader.
            </summary>
      <param name="reader">The reader which is used to load a spreadsheet.</param>
      <param name="options">The CSV loading options which can be used to define settings for load operation.</param>
      <returns>A loaded spreadsheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Load(System.String)">
      <summary>
            Loads a spreadsheet from a file with the specified path.
            </summary>
      <param name="path">The path from which to load a spreadsheet.</param>
      <returns>A loaded spreadsheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Load(System.String,GemBox.Spreadsheet.LoadOptions)">
      <summary>
            Loads a spreadsheet from a file with the specified path.
            </summary>
      <param name="path">The path from which to load a spreadsheet.</param>
      <param name="options">The loading options which can be used to define settings for load operation.</param>
      <returns>A loaded spreadsheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.IO.Stream,GemBox.Spreadsheet.CsvType)">
      <summary>
            Loads the existing stream with specified CSV format.
            </summary>
      <param name="stream">Input stream.</param>
      <param name="csvType">CSV type.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.IO.Stream,System.Char)">
      <summary>
            Loads the existing stream, using specified character as a delimiter.
            </summary>
      <param name="stream">Input stream.</param>
      <param name="separator">Separator used for delimiting data values.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.IO.StreamReader,GemBox.Spreadsheet.CsvType)">
      <summary>
            Loads all data using specified StreamReader and CSV Type.
            </summary>
      <param name="reader">Stream reader.</param>
      <param name="csvType">CSV type.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.IO.StreamReader,System.Char)">
      <summary>
            Loads all data using specified StreamReader and character delimiter.
            </summary>
      <param name="reader">Stream reader.</param>
      <param name="separator">Separator used for delimiting data values.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.String,GemBox.Spreadsheet.CsvType)">
      <summary>
            Loads the existing file with specified CSV format.
            </summary>
      <param name="path">Existing CSV file name (opened for reading).</param>
      <param name="csvType">CSV type.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadCsv(System.String,System.Char)">
      <summary>
            Loads the existing file, using specified character as a delimiter.
            </summary>
      <param name="path">File name.</param>
      <param name="separator">Separator used for delimiting data values.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadFromDirectory(System.String,GemBox.Spreadsheet.OdsLoadOptions)">
      <summary>
            Loads all parts of ODS file as separate files from input directory.
            </summary>
      <param name="path">The path from which to load a spreadsheet.</param>
      <param name="options">The ODS loading options which can be used to define settings for load operation.</param>
      <returns>A loaded ODS spreadsheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadFromDirectory(System.String,GemBox.Spreadsheet.XlsxLoadOptions)">
      <summary>
            Loads all parts of XLSX file as separate files from input directory.
            </summary>
      <param name="path">The path from which to load a spreadsheet.</param>
      <param name="options">The XLSX loading options which can be used to define settings for load operation.</param>
      <returns>A loaded XLSX spreadsheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadOds(System.IO.Stream,GemBox.Spreadsheet.OdsOptions)">
      <summary>
            Loads the existing ODS file from the input stream.
            </summary>
      <param name="stream">Input stream (opened for reading).</param>
      <param name="odsOptions">ODS options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadOds(System.String,GemBox.Spreadsheet.OdsOptions)">
      <summary>
            Loads the existing ODS file.
            </summary>
      <param name="path">Existing ODS file name.</param>
      <param name="odsOptions">ODS options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadOdsFromDirectory(System.String,GemBox.Spreadsheet.OdsOptions)">
      <summary>
            Loads all parts of ODS file as separate files from input directory.
            </summary>
      <param name="path">Path of input directory.</param>
      <param name="odsOptions">ODS options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXls(System.IO.Stream)">
      <summary>
            Loads the existing XLS file from the input stream (preserving MS Excel records).
            </summary>
      <param name="stream">Input stream.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXls(System.IO.Stream,GemBox.Spreadsheet.XlsOptions)">
      <summary>
            Loads the existing XLS file from the input stream (optionally preserving MS Excel records).
            </summary>
      <param name="stream">Input stream.</param>
      <param name="xlsOptions">XLS options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXls(System.String)">
      <summary>
            Loads the existing XLS file (preserving MS Excel records).
            </summary>
      <param name="path">Existing XLS file name (opened for reading).</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXls(System.String,GemBox.Spreadsheet.XlsOptions)">
      <summary>
            Loads the existing XLS file (optionally preserving MS Excel records).
            </summary>
      <param name="path">Existing XLS file name (opened for reading).</param>
      <param name="xlsOptions">XLS options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXlsx(System.IO.Stream,GemBox.Spreadsheet.XlsxOptions)">
      <summary>
            Loads the existing XLSX file from the input stream. <b>(.NET 3.0 and greater only)</b></summary>
      <param name="stream">Input stream.</param>
      <param name="xlsxOptions">XLSX options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXlsx(System.String,GemBox.Spreadsheet.XlsxOptions)">
      <summary>
            Loads the existing XLSX file. <b>(.NET 3.0 and greater only)</b></summary>
      <param name="path">Existing XLSX file name (opened for reading).</param>
      <param name="xlsxOptions">XLSX options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.LoadXlsxFromDirectory(System.String,GemBox.Spreadsheet.XlsxOptions)">
      <summary>
            Loads all parts of XLSX file as separate files from input directory.
            </summary>
      <param name="path">Path of input directory.</param>
      <param name="xlsxOptions">XLS options.</param>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxColumns">
      <summary>
            Maximum number of columns in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxRows">
      <summary>
            Maximum number of rows in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxXlsCellStyles">
      <summary>
            Maximum number of user-defined cell styles in XLS (BIFF8) file.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxXlsColors">
      <summary>
            Maximum number of colors in XLS (BIFF8) file.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxXlsColumns">
      <summary>
            Maximum number of columns in XLS (BIFF8) file.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFile.MaxXlsRows">
      <summary>
            Maximum number of rows in XLS (BIFF8) file.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Print">
      <summary>
            Prints the document to the default printer.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Print(System.String)">
      <summary>
            Prints the document to the specified printer.
            </summary>
      <param name="printerName">Printer name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Print(System.String,GemBox.Spreadsheet.PrintOptions)">
      <summary>
            Prints the document to the specified printer according to specified options.
            </summary>
      <param name="printerName">Printer name.</param>
      <param name="options">Print options.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.Protected">
      <summary>
            Gets or sets the workbook protection flag.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.RowColumnResolutionMethod">
      <summary>
            Gets or sets the <see cref="T:GemBox.Spreadsheet.CellStyle" /> resolution method.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.IO.Stream,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the spreadsheet to the specified stream.
            </summary>
      <param name="stream">The stream to which to save the spreadsheet.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.IO.TextWriter,GemBox.Spreadsheet.CsvSaveOptions)">
      <summary>
            Save the spreadsheet to CSV format using the specified writer.
            </summary>
      <param name="writer">The writer which is used to save the spreadsheet.</param>
      <param name="options">The CSV saving options which can be used to define settings for save operation.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.Object,System.String)">
      <summary>
            Saves the spreadsheet to a System.Web.HttpResponse or System.Web.HttpResponseBase output stream and sets appropriate HTTP response headers. Use this method in ASP.NET application to send the spreadsheet to a client browser. File format is resolved from <paramref name="fileName" /> extension. See remarks why <paramref name="httpResponse" /> parameter is of type <see cref="T:System.Object" />.
            </summary>
      <param name="httpResponse">HttpResponse object that can be retrieved through the Response property of the System.Web.HttpApplication, System.Web.HttpContext, System.Web.UI.Page or System.Web.UI.UserControl classes or HttpResponseBase object.</param>
      <param name="fileName">File name that will be presented in client browser when downloading a file.</param>
      <exception cref="T:System.InvalidOperationException">If file extension is not specified or not supported. If file extension is not recognized, use <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.Object,System.String,GemBox.Spreadsheet.SaveOptions)" /> method overload instead.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.Object,System.String,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the spreadsheet to a System.Web.HttpResponse or System.Web.HttpResponseBase output stream and sets appropriate HTTP response headers. Use this method in ASP.NET application to send the spreadsheet to a client browser. File format is defined with <paramref name="options" /> parameter. See remarks why <paramref name="httpResponse" /> parameter is of type <see cref="T:System.Object" />.
            </summary>
      <param name="httpResponse">HttpResponse object that can be retrieved through the Response property of the System.Web.HttpApplication, System.Web.HttpContext, System.Web.UI.Page or System.Web.UI.UserControl classes or HttpResponseBase object.</param>
      <param name="fileName">File name that will be presented in client browser when downloading a file.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.String)">
      <summary>
            Saves the spreadsheet to a file with the specified path.
            </summary>
      <param name="path">The path to which to save the spreadsheet.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.String,GemBox.Spreadsheet.SaveOptions)">
      <summary>
            Saves the spreadsheet to a file with the specified path.
            </summary>
      <param name="path">The path to which to save the spreadsheet.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.Save(System.Xml.XmlWriter,GemBox.Spreadsheet.HtmlSaveOptions)">
      <summary>
            Save the spreadsheet to HTML format using the specified writer.
            </summary>
      <param name="writer">The writer which is used to save the spreadsheet.</param>
      <param name="options">The HTML saving options which can be used to define settings for save operation.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.IO.Stream,GemBox.Spreadsheet.CsvType)">
      <summary>
            Saves all data to a stream in a specified CSV format.
            </summary>
      <param name="stream">Output stream.</param>
      <param name="csvType">CSV type.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.IO.Stream,System.Char)">
      <summary>
            Saves all data to a stream, using specified character as a delimiter.
            </summary>
      <param name="stream">Output stream.</param>
      <param name="separator">Separator used for delimiting data values.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.IO.TextWriter,GemBox.Spreadsheet.CsvType)">
      <summary>
            Saves all data using specified TextWriter and CSV Type.
            </summary>
      <param name="writer">Text writer.</param>
      <param name="csvType">CSV type.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.IO.TextWriter,System.Char)">
      <summary>
            Saves all data using specified TextWriter and character delimiter.
            </summary>
      <param name="writer">Text writer.</param>
      <param name="separator">Separator used for delimiting data values.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.String,GemBox.Spreadsheet.CsvType)">
      <summary>
            Saves all data to a new file in a specified CSV format.
            </summary>
      <param name="path">File name.</param>
      <param name="csvType">CSV type.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveCsv(System.String,System.Char)">
      <summary>
            Saves all data to a new file, using specified character as a delimiter.
            </summary>
      <param name="path">File name.</param>
      <param name="separator">Separator used for delimiting data values.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveOds(System.IO.Stream)">
      <summary>
            Saves all data to an output stream in ODF format.
            </summary>
      <param name="stream">Output stream.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveOds(System.String)">
      <summary>
            Saves all data to a new file in ODF format.
            </summary>
      <param name="path">File name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveOdsToDirectory(System.String)">
      <summary>
            Saves all parts of ODS file as separate files to output directory.
            </summary>
      <param name="path">Path of output directory.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveToDirectory(System.String,GemBox.Spreadsheet.OdsSaveOptions)">
      <summary>
            Saves all parts of ODS file as separate files to output directory.
            </summary>
      <param name="path">Path of output directory.</param>
      <param name="options">Advanced save options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveToDirectory(System.String,GemBox.Spreadsheet.XlsxSaveOptions)">
      <summary>
            Saves all parts of XLSX file as separate files to output directory.
            </summary>
      <param name="path">Path of output directory</param>
      <param name="options">Advanced save options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveToHttpResponse(System.Object,System.String,System.Object[])">
      <summary>
            Saves the <see cref="T:GemBox.Spreadsheet.ExcelFile" /> to a System.Web.HttpResponse output stream and sets appropriate HTTP response headers. Use this method in ASP.NET application to send the document to a client browser. File format is resolved from <paramref name="options" /> parameter or <paramref name="fileName" /> parameter file extension as described in remarks. See remarks why <paramref name="httpResponse" /> parameter is of type <see cref="T:System.Object" />.
            </summary>
      <param name="httpResponse">HttpResponse object that can be retrieved through the Response property of the System.Web.HttpApplication, System.Web.HttpContext, System.Web.UI.Page or System.Web.UI.UserControl classes.</param>
      <param name="fileName">File name that will be presented in client browser when downloading a file.</param>
      <param name="options">The saving options which can be used to define settings for save operation.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXls(System.IO.Stream)">
      <summary>
            Saves all data to an output stream in XLS format.
            </summary>
      <param name="stream">Output stream.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXls(System.String)">
      <summary>
            Saves all data to a new file in XLS format.
            </summary>
      <param name="path">File name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsx(System.IO.Stream)">
      <summary>
            Saves all data to an output stream in XLSX format. <b>(.NET 3.0 and greater only)</b></summary>
      <param name="stream">Output stream.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsx(System.IO.Stream,GemBox.Spreadsheet.XlsxSaveOptions)">
      <summary>
            Saves all data to an output stream in XLSX format. <b>(.NET 3.0 and greater only)</b></summary>
      <param name="stream">Output stream.</param>
      <param name="options">Advanced save options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsx(System.String)">
      <summary>
            Saves all data to a new file in XLSX format. <b>(.NET 3.0 and greater only)</b></summary>
      <param name="path">File name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsx(System.String,GemBox.Spreadsheet.XlsxSaveOptions)">
      <summary>
            Saves all data to a new file in XLSX format. <b>(.NET 3.0 and greater only)</b></summary>
      <param name="path">File name.</param>
      <param name="options">Advanced save options.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsxToDirectory(System.String)">
      <summary>
            Saves all parts of XLSX file as separate files to output directory.
            </summary>
      <param name="path">Path of output directory.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SaveXlsxToDirectory(System.String,GemBox.Spreadsheet.XlsxSaveOptions)">
      <summary>
            Saves all parts of XLSX file as separate files to output directory.
            </summary>
      <param name="path">Path of output directory</param>
      <param name="options">Advanced save options.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.Styles">
      <summary>
            Gets the collection of <see cref="T:GemBox.Spreadsheet.CellStyle" />s defined for this <see cref="T:GemBox.Spreadsheet.ExcelFile" /> instance.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFile.SupportsType(System.Type)">
      <summary>
            Gets a value indicating whether the objects of specified type can be assigned 
            to <see cref="P:GemBox.Spreadsheet.ExcelCell.Value">ExcelCell.Value</see> property.
            </summary>
      <param name="type">Queried type.</param>
      <returns>
        <see langword="true" /> if the specified type is supported; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.Use1904DateSystem">
      <summary>
            Gets or sets whether 1904 date system is used.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFile.Worksheets">
      <summary>
            Collection of all worksheets (<see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />) in a workbook. 
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelFillPattern">
      <summary>
            Contains fill pattern settings.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFillPattern.PatternBackgroundColor">
      <summary>
            Get or sets fill pattern background color.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFillPattern.PatternForegroundColor">
      <summary>
            Get or sets fill pattern foreground color.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFillPattern.PatternStyle">
      <summary>
            Gets or sets fill pattern style.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFillPattern.SetPattern(GemBox.Spreadsheet.FillPatternStyle,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Sets complex (non-empty and non-solid) pattern.
            </summary>
      <param name="patternStyle">Pattern style.</param>
      <param name="foregroundColor">Foreground color.</param>
      <param name="backgroundColor">Background color.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFillPattern.SetSolid(System.Drawing.Color)">
      <summary>
            Sets solid pattern using specified fill color.
            </summary>
      <param name="fillColor">Fill color.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelFont">
      <summary>
            Contains font related settings.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelFont.#ctor">
      <summary>
            Creates new font with default values (Arial font with size 200).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFont.BoldWeight">
      <summary>
            Default bold font weight.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Color">
      <summary>
            Gets or sets font color.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Italic">
      <summary>
            Gets or sets if the font is italic.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFont.MaxWeight">
      <summary>
            Maximum font weight.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFont.MinWeight">
      <summary>
            Minimum font weight.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Name">
      <summary>
            Gets or sets name of the font.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelFont.NormalWeight">
      <summary>
            Normal font weight.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.ScriptPosition">
      <summary>
            Gets or sets font script position.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Size">
      <summary>
            Gets or sets font size.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Strikeout">
      <summary>
            Gets or sets if the font is struck out.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.UnderlineStyle">
      <summary>
            Gets or sets font underlining.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelFont.Weight">
      <summary>
            Gets or sets font weight (font boldness).
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Font weight is out of allowed range.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelPicture">
      <summary>
            Represents a picture object used by <see cref="T:GemBox.Spreadsheet.ExcelPictureCollection" /> in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.BottomRightCell">
      <summary>
            Gets or sets the bottom right anchor cell for the picture.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.BoundingRectangle">
      <summary>
            Gets the image bounding rectangle.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPicture.Delete">
      <summary>
            Deletes this picture from picture collection.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.HasHyperlink">
      <summary>
            If picture has hyperlink returns true, else returns false.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.Hyperlink">
      <summary>
             Gets or sets picture hyperlink.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.Image">
      <summary>
            Gets the image previously loaded.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.ImageStream">
      <summary>
            Gets the image stream.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.PictureFormat">
      <summary>
            Gets the picture format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.Positioning">
      <summary>
            Gets or sets the positioning options of the pictue.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPicture.ToImage">
      <summary>
            Creates <see cref="T:System.Drawing.Image" /> instance from this <see cref="T:GemBox.Spreadsheet.ExcelPicture" /> instance.
            </summary>
      <returns>New instance of <see cref="T:System.Drawing.Image" /> class.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPicture.TopLeftCell">
      <summary>
            Gets or sets the top left anchor cell for the picture.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelPictureCollection">
      <summary>
            Collection of the <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.ExcelPictureFormat)">
      <summary>
            Adds the image with defined anchor properties.
            </summary>
      <param name="imageStream">Stream of the image to be added.</param>
      <param name="mode">Positioning mode of the image.</param>
      <param name="topLeftCell">Top left anchor cell.</param>
      <param name="bottomRightCell">Bottom right anchor cell.</param>
      <param name="format">Picture format.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.ExcelPictureFormat)">
      <summary>
            Adds the image by using defined top left anchor property and default width/height.
            </summary>
      <param name="imageStream">Stream of the image to be added.</param>
      <param name="mode">Positioning mode of the image.</param>
      <param name="topLeftCell">Top left anchor cell.</param>
      <param name="format">Picture format.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell,System.Int32,System.Int32,GemBox.Spreadsheet.ExcelPictureFormat)">
      <summary>
            Adds the image from specified fileName by using defined top left anchor property and defined width and height.
            </summary>
      <param name="imageStream">Stream of the image to be added.</param>
      <param name="mode">Positioning mode of the image.</param>
      <param name="topLeftCell">Top left anchor cell.</param>
      <param name="width">Image width (in pixels).</param>
      <param name="height">Image height (in pixels).</param>
      <param name="format">Picture format.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,GemBox.Spreadsheet.PositioningMode,System.Drawing.Rectangle,GemBox.Spreadsheet.ExcelPictureFormat)">
      <summary>
            Adds the image by using defined rectangle.
            </summary>
      <param name="imageStream">Stream of the image to be added.</param>
      <param name="mode">Positioning mode of the image.</param>
      <param name="rect">The destination rectangle.</param>
      <param name="format">Picture format.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.IO.MemoryStream,System.Drawing.Rectangle,GemBox.Spreadsheet.ExcelPictureFormat)">
      <summary>
            Adds image from the image object by using defined rectangle.
            </summary>
      <param name="imageStream">Image stream.</param>
      <param name="rect">Destination rectangle.</param>
      <param name="format">Picture format.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds the image from specified fileName by using defined top left anchor property and default width/height.
            </summary>
      <param name="fileName">File name of the image to be added.</param>
      <param name="mode">Positioning mode of the image.</param>
      <param name="topLeftCell">Top left anchor cell.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell,GemBox.Spreadsheet.AnchorCell)">
      <summary>
            Adds the image from specified fileName with defined anchor properties.
            </summary>
      <param name="fileName">File name of the image to be added.</param>
      <param name="mode">Positioning mode of the image.</param>
      <param name="topLeftCell">Top left anchor cell.</param>
      <param name="bottomRightCell">Bottom right anchor cell.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.PositioningMode,GemBox.Spreadsheet.AnchorCell,System.Int32,System.Int32)">
      <summary>
            Adds the image from specified fileName by using defined top left anchor property and defined width and height.
            </summary>
      <param name="fileName">File name of the image to be added.</param>
      <param name="mode">Positioning mode of the image.</param>
      <param name="topLeftCell">Top left anchor cell.</param>
      <param name="width">Image width (in pixels).</param>
      <param name="height">Image height (in pixels).</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,GemBox.Spreadsheet.PositioningMode,System.Drawing.Rectangle)">
      <summary>
            Adds the image from specified fileName by using defined rectangle.
            </summary>
      <param name="fileName">The fileName.</param>
      <param name="mode">Positioning mode of the image.</param>
      <param name="rect">The destination rectangle.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Add(System.String,System.Drawing.Rectangle)">
      <summary>
            Adds the image from specified fileName by using defined rectangle.
            </summary>
      <param name="fileName">The fileName.</param>
      <param name="rect">The destination rectangle.</param>
      <returns>Newly created <see cref="T:GemBox.Spreadsheet.ExcelPicture" />.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.Clear">
      <summary>
            Clears ExcelPictureCollection.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPictureCollection.Count">
      <summary>
            Gets the count of pictures items.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" />
            that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPictureCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.ExcelPicture" /> at the specified index.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPictureCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelPictureFormat">
      <summary>
            Picture formats.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Jpeg">
      <summary>
            Jpeg picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Png">
      <summary>
            Png picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Tiff">
      <summary>
            Tiff picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Gif">
      <summary>
            Gif picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Emf">
      <summary>
            Emf picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Wmf">
      <summary>
            Wmf picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Bmp">
      <summary>
            Bmp picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Exif">
      <summary>
            Exif picture format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExcelPictureFormat.Ico">
      <summary>
            Ico picture format.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelPrintOptions">
      <summary>
            Stores MS Excel print and print related options.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.AutomaticPageBreakScalingFactor">
      <summary>
            Scaling factor for automatic page breaks.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is out of 10 to 400 range.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.BottomMargin">
      <summary>
            Bottom margin (in inches).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.DraftQuality">
      <summary>
        <see langword="true" /> for printing in draft quality, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPrintOptions.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> is equal 
            to the current <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" />.
            </summary>
      <param name="obj">Object of <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> type.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" /> is equal 
            to the current <see cref="T:GemBox.Spreadsheet.ExcelPrintOptions" />; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.FitToPage">
      <summary>
        <see langword="true" /> for using 
            <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.FitWorksheetHeightToPages" />
            and <see cref="P:GemBox.Spreadsheet.ExcelPrintOptions.FitWorksheetWidthToPages" />, 
            <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.FitWorksheetHeightToPages">
      <summary>
            Fit worksheet height to this number of pages (0 = use as many as needed).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.FitWorksheetWidthToPages">
      <summary>
            Fit worksheet width to this number of pages (0 = use as many as needed).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.FooterMargin">
      <summary>
            Footer margin (in inches).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelPrintOptions.GetHashCode">
      <summary>
            Returns the hash code of this object.
            </summary>
      <returns>Hash code.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.HeaderMargin">
      <summary>
            Header margin (in inches).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.HorizontalCentered">
      <summary>
        <see langword="true" /> for printing sheet horizontal centered, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.LeftMargin">
      <summary>
            Left margin (in inches).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.NumberOfCopies">
      <summary>
            Number of copies to print.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PageHeight">
      <summary>
            Gets the height of the page (in inches).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PageWidth">
      <summary>
            Gets the width of the page (in inches).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PaperSize">
      <summary>
            MS Excel specific paper size / type index.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PaperType">
      <summary>
            Gets or sets the type of the paper for the page. 
            </summary>
      <exception cref="T:System.ArgumentException">Thrown if type is set to
            <see cref="F:GemBox.Spreadsheet.PaperType.Custom">PaperType.Custom</see></exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.Portrait">
      <summary>
        <see langword="true" /> for portrait orientation, <see langword="false" /> for landscape orientation.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintBlackWhite">
      <summary>
        <see langword="true" /> for printing in black and white, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintCellNotes">
      <summary>
        <see langword="true" /> for printing cell notes, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintGridlines">
      <summary>
        <see langword="true" /> for printing gridlines, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintHeadings">
      <summary>
        <see langword="true" /> for print headings, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintNotesSheetEnd">
      <summary>
        <see langword="true" /> for printing notes at end of sheet, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintPagesInRows">
      <summary>
        <see langword="true" /> for printing pages in rows, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.PrintResolution">
      <summary>
            Print resolution in dpi.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.RightMargin">
      <summary>
            Right margin (in inches).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.StartPageNumber">
      <summary>
            Start page number.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.TopMargin">
      <summary>
            Top margin (in inches).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.UseStartPageNumber">
      <summary>
        <see langword="true" /> for using start page number, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.VerticalCentered">
      <summary>
        <see langword="true" /> for printing sheet vertical centered, <see langword="false" /> otherwise.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelPrintOptions.VerticalPrintResolution">
      <summary>
            Vertical print resolution in dpi.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelRow">
      <summary>
            Excel row contains row options and cell range with row cells.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRow.AllocatedCells">
      <summary>
            Gets only currently allocated cells for this row.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.AutoFit">
      <summary>
            Automatically fits row height to the minimum size required for all lines in the row cells to be visible.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRow.Cells">
      <summary>
            Gets cell range with row cells.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.Delete">
      <summary>
            Deletes this row from the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRow.Height">
      <summary>
            Gets or sets row height.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.InsertCopy(System.Int32,GemBox.Spreadsheet.ExcelRow)">
      <summary>
            Inserts specified number of copied rows before the current row.
            </summary>
      <param name="rowCount">Number of rows to insert.</param>
      <param name="sourceRow">Source row to copy.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRow.InsertEmpty(System.Int32)">
      <summary>
            Inserts specified number of empty rows before the current row.
            </summary>
      <param name="rowCount">Number of rows to insert.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelRowCollection">
      <summary>
            Collection of excel rows (<see cref="T:GemBox.Spreadsheet.ExcelRow" />).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.RowIndexToName(System.Int32)">
      <summary>
            Converts row index (0, 1, ...) to row name ("1", "2", ...).
            </summary>
      <param name="rowIndex">Row index.</param>
      <returns>Row name for the specified index.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowCollection.RowNameToIndex(System.String)">
      <summary>
            Converts row name ("1", "2", ...) to row index (0, 1, ...).
            </summary>
      <param name="name">Row name.</param>
      <returns>Row index for the specified name.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelRowColumnCellCollectionBase">
      <summary>
            Base class for row, column and cell collections.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRowColumnCellCollectionBase.Count">
      <summary>
            Gets the number of currently allocated elements (dynamically changes when worksheet is modified -- read remarks).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCellCollectionBase.GetEnumerator">
      <summary>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelRowColumnCellCollectionBase" />.
            </summary>
      <returns>
            An enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelRowColumnCellCollectionBase" />.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelRowColumnCollectionBase">
      <summary>
            Base class for row and column collections.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1">
      <summary>
            Generic base class for row and column collections.
            </summary>
      <typeparam name="T">Type of the items in the collection, either <see cref="T:GemBox.Spreadsheet.ExcelRow" /> or <see cref="T:GemBox.Spreadsheet.ExcelColumn" />.</typeparam>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.Item(System.Int32)">
      <summary>
            Gets the row / column with the specified index.
            </summary>
      <param name="index">The zero-based index of the row / column.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelRowColumnCollectionBase`1.Item(System.String)">
      <summary>
            Gets the row / column with the specified name.
            </summary>
      <param name="name">The name of the row / column.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelViewOptions">
      <summary>
            Stores MS Excel display and view related options.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.FirstVisibleColumn">
      <summary>
            Index of the first visible column in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.FirstVisibleRow">
      <summary>
            Index of the first visible row in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.OutlineColumnButtonsRight">
      <summary>
            Gets or sets whether outline column buttons are displayed on the right side of groups.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.OutlineRowButtonsBelow">
      <summary>
            Gets or sets whether outline row buttons are displayed below groups.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.PageBreakViewZoom">
      <summary>
            Magnification factor in page break view.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is out of 10 to 400 range.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.SelectedCells">
      <summary>
            Gets or sets the selected cells.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowColumnsFromRightToLeft">
      <summary>
            If true, MS Excel shows columns from right to left.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowFormulas">
      <summary>
            If true, MS Excel shows formulas. Otherwise, formula results are shown. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowGridLines">
      <summary>
            If true, MS Excel shows grid lines.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowInPageBreakPreview">
      <summary>
            If true, MS Excel shows worksheet in page break preview. Otherwise, normal view is used.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowOutlineSymbols">
      <summary>
            If true, MS Excel shows outline symbols.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowSheetHeaders">
      <summary>
            If true, MS Excel shows row and column headers.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ShowZeroValues">
      <summary>
            If true, MS Excel shows zero values. Otherwise, zero values are shown as empty cells.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.ViewType">
      <summary>
            Gets and sets the view type. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelViewOptions.Zoom">
      <summary>
            Magnification factor in normal view.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is out of 10 to 400 range.</exception>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelWorksheet">
      <summary>
            Excel worksheet is a table with additional properties, identified by a unique name.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CalculateMaxUsedColumns">
      <summary>
            Iterates all rows and finds maximum number of used columns.
            </summary>
      <returns>Maximum number of occupied columns in this sheet.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Cells">
      <summary>
            Gets <see cref="T:GemBox.Spreadsheet.CellRange" /> with all the cells 
            (<see cref="T:GemBox.Spreadsheet.ExcelCell" />) 
            in the worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.Clear">
      <summary>
            Clears this worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Columns">
      <summary>
            Gets collection of all columns (<see cref="T:GemBox.Spreadsheet.ExcelColumn" />) in the worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.CellRange,GemBox.Spreadsheet.ColumnTypeResolution,GemBox.Spreadsheet.ExtractDataOptions,System.Boolean)">
      <summary>
            Extracts data from <see cref="T:GemBox.Spreadsheet.CellRange">specified range of cells</see> to a new <see cref="T:System.Data.DataTable" />. 
            </summary>
      <param name="range">Cell range.</param>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="useFirstRowForColumnNames">If <see langword="true" /> then values from first row will be used for <see cref="P:System.Data.DataColumn.ColumnName" /> columns.</param>
      <returns>DataTable with data from specified cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.ColumnTypeResolution)">
      <summary>
            Extracts data from used cells of this worksheet to a new <see cref="T:System.Data.DataTable" />. 
            <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see> is determined by the <see cref="T:GemBox.Spreadsheet.ColumnTypeResolution" />.
            </summary>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <returns>DataTable with data from used cells.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.ColumnTypeResolution,GemBox.Spreadsheet.ExcelRow,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,GemBox.Spreadsheet.ExcelColumn[])">
      <summary>
            Extracts data from specified cells to a new <see cref="T:System.Data.DataTable" />.
            </summary>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <param name="startRow">Start ExcelRow.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="columns">Columns to extract.</param>
      <returns>DataTable with data from specified rows/columns.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.ColumnTypeResolution,GemBox.Spreadsheet.ExcelRow,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,System.Boolean,GemBox.Spreadsheet.ExcelColumn[])">
      <summary>
            Extracts data from specified cells to a new <see cref="T:System.Data.DataTable" />.
            </summary>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <param name="startRow">Start ExcelRow.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="useFirstRowForColumnNames">If <see langword="true" /> then values from first row will be used for <see cref="P:System.Data.DataColumn.ColumnName" /> columns.</param>
      <param name="columns">Columns to extract.</param>
      <returns>DataTable with data from specified rows/columns.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.ColumnTypeResolution,GemBox.Spreadsheet.ExcelRow,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,System.Boolean,System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.ExcelColumn})">
      <summary>
            Extracts data from specified cells to a new <see cref="T:System.Data.DataTable" />.
            </summary>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <param name="startRow">Start ExcelRow.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="useFirstRowForColumnNames">If <see langword="true" /> then values from first row will be used for <see cref="P:System.Data.DataColumn.ColumnName" /> columns.</param>
      <param name="columns">Columns to extract.</param>
      <returns>DataTable with data from specified rows/columns.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.ColumnTypeResolution,GemBox.Spreadsheet.ExcelRow,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.ExcelColumn})">
      <summary>
            Extracts data from specified cells to a new <see cref="T:System.Data.DataTable" />. 
            </summary>
      <param name="resolution">Resolution type that determines <see cref="P:System.Data.DataColumn.DataType">DataTable column type</see>.</param>
      <param name="startRow">Start ExcelRow.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="columns">Columns to extract.</param>
      <returns>DataTable with data from specified rows/columns.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.CreateDataTable(GemBox.Spreadsheet.CreateDataTableOptions)">
      <summary>
            Creates a <see cref="T:System.Data.DataTable" /> and fills it with data from this <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> in a manner specified by
            create options, see <see cref="T:GemBox.Spreadsheet.CreateDataTableOptions" />.
            </summary>
      <param name="options">Options that describe how <see cref="T:System.Data.DataTable" /> will be created and filled with data extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <returns>
        <see cref="T:System.Data.DataTable" /> with data from specified cells.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.DataValidations">
      <summary>
            Gets the collection that expresses all data validation information for cells in a sheet which have data validation features applied.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.DefaultColumnWidth">
      <summary>
            Gets or sets default column width.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.Delete">
      <summary>
            Deletes this worksheet from the workbook.
            </summary>
    </member>
    <member name="E:GemBox.Spreadsheet.ExcelWorksheet.ExtractDataEvent">
      <summary>
            Event that fires when specific error occurs while extracting data to DataTable.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.ExtractToDataTable(System.Data.DataTable,GemBox.Spreadsheet.ExtractToDataTableOptions)">
      <summary>
            Extracts data to <see cref="T:System.Data.DataTable" /> with specified extract options, see <see cref="T:GemBox.Spreadsheet.ExtractToDataTableOptions" />.
            </summary>
      <param name="dataTable">Destination <see cref="T:System.Data.DataTable" />.</param>
      <param name="options">Options that describe how data will be extracted, see <see cref="T:GemBox.Spreadsheet.ExtractToDataTableOptions" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.ExtractToDataTable(System.Data.DataTable,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,GemBox.Spreadsheet.ExcelRow,GemBox.Spreadsheet.ExcelColumn)">
      <summary>
            Extracts data to DataTable with the same column order as it is in ExcelWorksheet.
            </summary>
      <param name="dataTable">Destination DataTable.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="startRow">Start ExcelRow.</param>
      <param name="startColumn">Start ExcelColumn.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.ExtractToDataTable(System.Data.DataTable,System.Int32,GemBox.Spreadsheet.ExtractDataOptions,System.Data.Common.DataColumnMappingCollection,GemBox.Spreadsheet.ExcelRow)">
      <summary>
            Extracts data to DataTable with column mapping.
            </summary>
      <param name="dataTable">Destination DataTable.</param>
      <param name="numberOfRows">Number of rows to extract.</param>
      <param name="options">Options that describe how data will be extracted.</param>
      <param name="dataColumnMappingCollection">Column mapping.</param>
      <param name="startRow">Start ExcelRow.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.ExtractUsedRangeToDataTable(GemBox.Spreadsheet.ExtractDataOptions)">
      <summary>
            Extracts data from used cells of this worksheet to a new DataTable with columns of type object.
            </summary>
      <param name="options">Options that describe how data will be extracted.</param>
      <returns>New DataTable.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.GetUsedCellRange">
      <summary>
            Calculates cell range that is used in the worksheet (every allocated cell is considered used).
            </summary>
      <returns>Cell range that is used in the worksheet (every allocated cell is considered used).</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.GetUsedCellRange(System.Boolean)">
      <summary>
            Calculates cell range that is used in the worksheet.
            </summary>
      <param name="ignoreCellsWithoutValue">Specifies if allocated cells with <see cref="P:GemBox.Spreadsheet.ExcelCell.Value" /> set to <see langword="null" /> are ignored.</param>
      <returns>Cell range that is used in the worksheet.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.HasHeadersFooters">
      <summary>
            Returns true if worksheet has headers/footers.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.HasSplitOrFreezePanes">
      <summary>
            Returns true if worksheet has split or freeze panes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.HeadersFooters">
      <summary>
            Gets or sets headers/footers for the sheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.HorizontalPageBreaks">
      <summary>
            Gets collection of all horizontal page breaks 
            (<see cref="T:GemBox.Spreadsheet.HorizontalPageBreak" />) in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Hyperlinks">
      <summary>
            Gets hyperlinks in this  sheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertCopy(System.String,GemBox.Spreadsheet.ExcelWorksheet)">
      <summary>
            Inserts a copy of an existing worksheet before the current worksheet.
            </summary>
      <param name="destinationWorksheetName">Name of the new worksheet.</param>
      <param name="sourceWorksheet">Source worksheet.</param>
      <returns>Newly created worksheet.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertDataTable(System.Data.DataTable)">
      <summary>
            Inserts a <see cref="T:System.Data.DataTable" /> into the current worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> which will be inserted into the current worksheet.</param>
      <returns>Number of inserted rows.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertDataTable(System.Data.DataTable,GemBox.Spreadsheet.InsertDataTableOptions)">
      <summary>
            Inserts a <see cref="T:System.Data.DataTable" /> into the current worksheet.
            </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> which will be inserted into the current worksheet.</param>
      <param name="options">The <see cref="T:GemBox.Spreadsheet.InsertDataTableOptions" /> which can be used to define settings for the insert operation.</param>
      <returns>Number of inserted rows.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertDataTable(System.Data.DataTable,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Inserts a <see cref="T:System.Data.DataTable" /> at the specified row and column in 
            the current worksheet.
            </summary>
      <param name="dataTable">Source DataTable.</param>
      <param name="startRow">Index of the start row.</param>
      <param name="startColumn">Index of the start column.</param>
      <param name="columnHeaders">True to insert column names above data.</param>
      <returns>Number of inserted rows.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertDataTable(System.Data.DataTable,System.String,System.Boolean)">
      <summary>
            Inserts a <see cref="T:System.Data.DataTable" /> at the specified position in 
            the current worksheet.
            </summary>
      <param name="dataTable">Source DataTable.</param>
      <param name="startCell">Name of start (top-left) cell.</param>
      <param name="columnHeaders">True to insert column names above data.</param>
      <returns>Number of inserted rows.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheet.InsertEmpty(System.String)">
      <summary>
            Inserts an empty worksheet before the current worksheet.
            </summary>
      <param name="worksheetName">Worksheet name.</param>
      <returns>Newly created worksheet.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Name">
      <summary>
            Gets or sets worksheet name. 
            </summary>
      <exception cref="T:System.ArgumentException">Worksheet name is not unique.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.NamedRanges">
      <summary>
            Gets <see cref="T:GemBox.Spreadsheet.NamedRangeCollection" /> 
            containing descriptive names which are used to represent cells, ranges of cells, 
            formulas, or constant values.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Panes">
      <summary>
            Gets or sets the panes in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.PasswordHash">
      <summary>
            Gets or sets the password hash for protected sheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Pictures">
      <summary>
            Gets <see cref="T:GemBox.Spreadsheet.ExcelPictureCollection" /> containing images.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.PrintOptions">
      <summary>
            Contains MS Excel print and print related options.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Protected">
      <summary>
            Gets or sets the worksheet protection flag.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.ProtectionSettings">
      <summary>
            Gets or sets worksheet protection properties. This settings will be used only if <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Protected" /> is set to <see langword="true" />;
            Otherwise it will be ignored.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Rows">
      <summary>
            Gets collection of all rows (<see cref="T:GemBox.Spreadsheet.ExcelRow" />) in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.VerticalPageBreaks">
      <summary>
            Gets collection of all vertical page breaks 
            (<see cref="T:GemBox.Spreadsheet.VerticalPageBreak" />) in the worksheet.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.ViewOptions">
      <summary>
            Contains MS Excel display and view related options.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheet.Visibility">
      <summary>
            Gets or sets the worksheet visible property.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelWorksheet.ExtractDataEventHandler">
      <summary>
            Delegate for handling the ExtractData events.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExcelWorksheetCollection">
      <summary>
            Collection of worksheets (<see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet">
      <summary>
            Gets or sets active worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Add(System.String)">
      <summary>
            Adds an empty worksheet to the end of the collection.
            </summary>
      <param name="worksheetName">Worksheet name.</param>
      <returns>Newly created worksheet.</returns>
      <exception cref="T:System.ArgumentException">Worksheet name is not unique.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.AddCopy(System.String,GemBox.Spreadsheet.ExcelWorksheet)">
      <summary>
            Adds a copy of an existing worksheet to the end of the collection.
            </summary>
      <param name="destinationWorksheetName">Name of new worksheet.</param>
      <param name="sourceWorksheet">Source worksheet.</param>
      <returns>Newly created worksheet.</returns>
      <exception cref="T:System.ArgumentException">Worksheet name is not unique.</exception>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Contains(GemBox.Spreadsheet.ExcelWorksheet)">
      <summary>
            Determines whether an <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> element is in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.
            </summary>
      <param name="item">The <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> to locate in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.</param>
      <returns>
            True if <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> is found in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />; otherwise, false.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.Contains(System.String)">
      <summary>
            Determines whether an <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> element with specified name is in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.
            </summary>
      <param name="worksheetName">The name of the <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> to locate in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.</param>
      <returns>
            True if <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> with specified name is found in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />; otherwise, false.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheetCollection.Count">
      <summary>
            Gets the number of elements contained in the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection">
            ExcelWorksheetCollection</see>.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.GetEnumerator">
      <summary>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.
            </summary>
      <returns>An enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheetCollection.Item(System.Int32)">
      <summary>
            Gets the worksheet with the specified index.
            </summary>
      <param name="index">The zero-based index of the worksheet.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ExcelWorksheetCollection.Item(System.String)">
      <summary>
            Gets the worksheet with the specified name.
            </summary>
      <param name="name">The name of the worksheet.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExcelWorksheetCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection">
            ExcelWorksheetCollection</see>.
            </summary>
      <returns>
            Returns an enumerator for the <see cref="T:GemBox.Spreadsheet.ExcelWorksheetCollection" />.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.ExtractDataDelegateEventArgs">
      <summary>
            Arguments of ExtractDataDelegate.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractDataDelegateEventArgs.Action">
      <summary>
            Defines how the error will be handled.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractDataDelegateEventArgs.DataTableRow">
      <summary>
            Index of <see cref="T:System.Data.DataTable" /> row where an error has occurred.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractDataDelegateEventArgs.DataTableValue">
      <summary>
            Value of the <see cref="T:System.Data.DataTable" /> cell.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractDataDelegateEventArgs.DestinationTable">
      <summary>
            Destinaton <see cref="T:System.Data.DataTable" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractDataDelegateEventArgs.ErrorID">
      <summary>
            Description of error that occurred.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractDataDelegateEventArgs.ExcelValue">
      <summary>
            Value of the <see cref="T:GemBox.Spreadsheet.ExcelCell" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractDataDelegateEventArgs.Mapping">
      <summary>
            Mapping of column which contains a cell where error occurred.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractDataDelegateEventArgs.WorksheetRow">
      <summary>
        <see cref="T:GemBox.Spreadsheet.ExcelRow" /> which contains a cell where error occurred.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExtractDataError">
      <summary>
            Possible errors that can occur while extracting to DataTable.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataError.WrongType">
      <summary>
            Error that indicates that data in ExcelWorksheet can't convert to <see cref="T:System.Data.DataTable" /> type.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExtractDataEventAction">
      <summary>
            Possible ways of proceeding after one of the events is fired while extracting to data table.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataEventAction.ThrowException">
      <summary>
            Throw exception after event has been handled.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataEventAction.Continue">
      <summary>
            Continue extracting data to <see cref="T:System.Data.DataTable" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataEventAction.StopReading">
      <summary>
            Stop extracting data to <see cref="T:System.Data.DataTable" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataEventAction.SkipRow">
      <summary>
            Skip row.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExtractDataOptions">
      <summary>
            Options specified when extracting data to <see cref="T:System.Data.DataTable" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataOptions.None">
      <summary>
            None of the options is set. 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataOptions.StopAtFirstEmptyRow">
      <summary>
            Extracting data stops at the first empty row.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ExtractDataOptions.SkipEmptyRows">
      <summary>
            When extracting data, skip all empty rows.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ExtractToDataTableOptions">
      <summary>
            Represents options for extracting data from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> to <see cref="T:System.Data.DataTable" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ExtractToDataTableOptions.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.ExtractToDataTableOptions" /> class.
            </summary>
      <param name="startRow">Index of the first row of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="startColumn">Index of the first column of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfRows">Number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.ExtractToDataTableOptions.#ctor(System.String,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.ExtractToDataTableOptions" /> class.
            </summary>
      <param name="startCell">Name of the first (top left) cell of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="numberOfRows">Number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="E:GemBox.Spreadsheet.ExtractToDataTableOptions.ExcelCellToDataTableCellConverting">
      <summary>
            Event that fires when converting <see cref="T:GemBox.Spreadsheet.ExcelCell" /> value to <see cref="T:System.Data.DataTable" /> cell value.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractToDataTableOptions.ExtractDataOptions">
      <summary>
            Gets or sets <see cref="P:GemBox.Spreadsheet.ExtractToDataTableOptions.ExtractDataOptions" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractToDataTableOptions.MappingCollection">
      <summary>
            Gets the collection used for mapping <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" /> columns to <see cref="T:System.Data.DataTable" /> columns.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractToDataTableOptions.NumberOfRows">
      <summary>
            Gets or sets the number of rows being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractToDataTableOptions.StartColumn">
      <summary>
            Gets or sets the index of the first column of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ExtractToDataTableOptions.StartRow">
      <summary>
            Gets or sets the index of the first row of data being extracted from <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FileFormatLimitations">
      <summary>
            Represents file format limitations when saving <see cref="T:GemBox.Spreadsheet.ExcelFile" /> to some format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.FileFormatLimitations.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes instance of <see cref="T:GemBox.Spreadsheet.FileFormatLimitations" /> class.
            </summary>
      <param name="maxRows">Maximum number of rows.</param>
      <param name="maxColumns">Maximum number of columns.</param>
      <param name="maxColors">Maximum number of colors.</param>
      <param name="maxCellStyles">Maximum number of cell styles.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.FileFormatLimitations.MaxCellStyles">
      <summary>
            Get maximum number of cell styles. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FileFormatLimitations.MaxColors">
      <summary>
            Get maximum number of colors. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FileFormatLimitations.MaxColumns">
      <summary>
            Get maximum number of columns. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FileFormatLimitations.MaxRows">
      <summary>
            Get maximum number of rows. 
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FillPatternStyle">
      <summary>
            Fill pattern styles used for 
            <see cref="P:GemBox.Spreadsheet.ExcelFillPattern.PatternStyle">ExcelFillPattern.PatternStyle</see>.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.None">
      <summary>
            No fill pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Solid">
      <summary>
            "Solid" fill pattern using foreground color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Gray6">
      <summary>
            "6% Gray" is Microsoft Excel pattern name, but any color can be used instead of black as a foreground color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Gray12">
      <summary>
            "12% Gray" is Microsoft Excel pattern name, but any color can be used instead of black as a foreground color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Gray25">
      <summary>
            "25% Gray" is Microsoft Excel pattern name, but any color can be used instead of black as a foreground color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Gray50">
      <summary>
            "50% Gray" is Microsoft Excel pattern name, but any color can be used instead of black as a foreground color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.Gray75">
      <summary>
            "75% Gray" is Microsoft Excel pattern name, but any color can be used instead of black as a foreground color.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.HorizontalStripe">
      <summary>
            "Horizontal Stripe" pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.VerticalStripe">
      <summary>
            "Vertical Stripe" pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.DiagonalStripe">
      <summary>
            "Diagonal Stripe" pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ReverseDiagonalStripe">
      <summary>
            "Reverse Diagonal Stripe" pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.DiagonalCrosshatch">
      <summary>
            "Diagonal Crosshatch" pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThickDiagonalCrosshatch">
      <summary>
            "Thick Diagonal Crosshatch" pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinHorizontalStripe">
      <summary>
            "Thin Horizontal Stripe" pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinVerticalStripe">
      <summary>
            "Thin Vertical Stripe" pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinDiagonalStripe">
      <summary>
            "Thin Diagonal Stripe" pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinReverseDiagonalStripe">
      <summary>
            "Thin Reverse Diagonal Stripe" pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinHorizontalCrosshatch">
      <summary>
            "Thin Horizontal Crosshatch" pattern.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FillPatternStyle.ThinDiagonalCrosshatch">
      <summary>
            "Thin Diagonal Crosshatch" pattern.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FixedWidthColumn">
      <summary>
            Class that represents column in Fixed-Width Text format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.FixedWidthColumn.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.FixedWidthColumn" /> class.
            </summary>
      <param name="width">The column width.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthColumn.LoadConverter">
      <summary>
            Gets or sets the converter for converting value from file to <see cref="T:GemBox.Spreadsheet.ExcelCell" /> value when loading from Fixed-Width Text file.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthColumn.SaveConverter">
      <summary>
            Gets or sets the converter for converting <see cref="T:GemBox.Spreadsheet.ExcelCell" /> value to text when saving to Fixed-Width Text file.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthColumn.Width">
      <summary>
            Gets or sets a value that represents column width.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FixedWidthLoadOptions">
      <summary>
            Represents options for loading from Fixed-Width Text file format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.FixedWidthLoadOptions.#ctor(GemBox.Spreadsheet.FixedWidthColumn[])">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.FixedWidthLoadOptions" /> class.
            </summary>
      <param name="columns">The column definitions for Fixed-Width Text file.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.FixedWidthLoadOptions.#ctor(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.FixedWidthColumn})">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.FixedWidthLoadOptions" /> class.
            </summary>
      <param name="columns">The column definitions for Fixed-Width Text file.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthLoadOptions.Columns">
      <summary>
            Gets the list of column definitions for Fixed-Width Text file. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthLoadOptions.Encoding">
      <summary>
            Gets or sets the encoding for the Fixed-Width Text file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthLoadOptions.FormatProvider">
      <summary>
            Gets or sets the format provider for the Fixed-Width Text file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthLoadOptions.ParseNumbers">
      <summary>
            Gets or sets a value indicating whether numbers will be parsed and stored as <see cref="T:System.Double" /> value when loading Fixed-Width Text file. If <see langword="false" />, numbers will be loaded as strings.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthLoadOptions.StartRow">
      <summary>
            Gets or sets the index of the first row of data being loaded from Fixed-Width Text file.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FixedWidthSaveOptions">
      <summary>
            Represents options for saving to Fixed-Width Text file format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.FixedWidthSaveOptions.#ctor(GemBox.Spreadsheet.FixedWidthColumn[])">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.FixedWidthSaveOptions" /> class.
            </summary>
      <param name="columns">The column definitions for Fixed-Width Text file.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.FixedWidthSaveOptions.#ctor(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.FixedWidthColumn})">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.FixedWidthSaveOptions" /> class.
            </summary>
      <param name="columns">The column definitions for Fixed-Width Text file.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthSaveOptions.Columns">
      <summary>
            Gets the List of column definitions for saving data. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthSaveOptions.Encoding">
      <summary>
            Gets or sets the encoding for the Fixed-Width Text file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthSaveOptions.FormatProvider">
      <summary>
            Gets or sets the format provider for the Fixed-Width Text file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to null.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to Fixed-Width Text file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FixedWidthSaveOptions.StartRow">
      <summary>
            Gets or sets the index of the first row of data being saved to Fixed-Width Text file.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FontSettings">
      <summary>
            Contains font related settings which are used when printing a spreadsheet or exporting a spreadsheet to a file format that requires font information.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FontSettings.FontsBaseDirectory">
      <summary>
            Gets or sets base directory path where component looks for fonts. Directory path can be absolute or relative to <see cref="M:System.IO.Directory.GetCurrentDirectory" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FontSettings.FontsBaseUri">
      <summary>
            Gets or sets base <see cref="T:System.Uri" /> where component looks for fonts. <see cref="T:System.Uri" /> path should end with <see cref="F:System.IO.Path.DirectorySeparatorChar" /> or <see cref="F:System.IO.Path.AltDirectorySeparatorChar" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FreeLimitEventArgs">
      <summary>
            Provides data for the <see cref="E:GemBox.Spreadsheet.SpreadsheetInfo.FreeLimitReached" /> event.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FreeLimitEventArgs.File">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.ExcelFile" /> on which limit was reached.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.FreeLimitEventArgs.FreeLimitReachedAction">
      <summary>
            Gets or sets the choice for proceeding when free limit is reached.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FreeLimitReachedAction">
      <summary>
            Type of action that can be chosen when free limit is reached.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FreeLimitReachedAction.ThrowException">
      <summary>
            Throw <see cref="T:GemBox.Spreadsheet.FreeLimitReachedException" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FreeLimitReachedAction.Stop">
      <summary>
            Stop reading/writing.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.FreeLimitReachedAction.ContinueAsTrial">
      <summary>
            Continue reading/writing using trial mode.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.FreeLimitReachedException">
      <summary>
            Exception that occurs when free limit is reached.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HeaderFooter">
      <summary>
            Represents worksheet's header or footer.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooter.#ctor">
      <summary>
        <see cref="T:GemBox.Spreadsheet.HeaderFooter" /> constructor.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooter.CenterSection">
      <summary>
            Gets or sets center section.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooter.LeftSection">
      <summary>
            Gets or sets left section.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooter.RightSection">
      <summary>
            Gets or sets right section.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HeaderFooterFieldType">
      <summary>
            Represents types of <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> predefined fields.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.PageNumber">
      <summary>
            Page number.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.NumberOfPages">
      <summary>
            Total number of pages.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.Date">
      <summary>
            Current date.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.Time">
      <summary>
            Current time.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.SheetName">
      <summary>
            Sheet name.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.FileName">
      <summary>
            File name.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HeaderFooterFieldType.FilePath">
      <summary>
            File path.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HeaderFooterPage">
      <summary>
            Represents header/footer which should be shown on a specific worksheet page (first page, even pages and all other pages).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterPage.#ctor">
      <summary>
        <see cref="T:GemBox.Spreadsheet.HeaderFooterPage" /> constructor.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooterPage.Footer">
      <summary>
            Gets or sets footer for this <see cref="T:GemBox.Spreadsheet.HeaderFooterPage" /> instance.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooterPage.Header">
      <summary>
            Gets or sets header for this <see cref="T:GemBox.Spreadsheet.HeaderFooterPage" /> instance.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HeaderFooterSection">
      <summary>
            Represents <see cref="T:GemBox.Spreadsheet.HeaderFooter">header or footer</see> section.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.#ctor">
      <summary>
        <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> constructor.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.Append(GemBox.Spreadsheet.HeaderFooterFieldType)">
      <summary>
            Appends special header/footer field to <see cref="P:GemBox.Spreadsheet.HeaderFooterSection.Content" />.
            </summary>
      <param name="fieldType">Special Header/Footer field.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.Append(GemBox.Spreadsheet.HeaderFooterFieldType,GemBox.Spreadsheet.ExcelFont)">
      <summary>
            Appends special header/footer field to <see cref="P:GemBox.Spreadsheet.HeaderFooterSection.Content" />.
            </summary>
      <param name="fieldType">Special Header/Footer field.</param>
      <param name="font">&gt;Desired <see cref="T:GemBox.Spreadsheet.ExcelFont" /> font.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.Append(System.String)">
      <summary>
            Appends text to <see cref="P:GemBox.Spreadsheet.HeaderFooterSection.Content" />.
            </summary>
      <param name="text">Text to append.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.Append(System.String,GemBox.Spreadsheet.ExcelFont)">
      <summary>
            Appends text to <see cref="P:GemBox.Spreadsheet.HeaderFooterSection.Content" />.
            </summary>
      <param name="text">Text to append.</param>
      <param name="font">Desired <see cref="T:GemBox.Spreadsheet.ExcelFont" /> font.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.AppendPicture(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat)">
      <summary>
            Appends picture to this <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> instance.
            </summary>
      <param name="pictureStream">Stream of the picture to be added.</param>
      <param name="imageFormat">Picture format.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.AppendPicture(System.IO.MemoryStream,GemBox.Spreadsheet.ExcelPictureFormat,System.Int32,System.Int32)">
      <summary>
            Appends picture to this <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> instance.
            </summary>
      <param name="pictureStream">Stream of the picture to be added.</param>
      <param name="imageFormat">Picture format.</param>
      <param name="width">Picture width (in pixels).</param>
      <param name="height">Picture height (in pixels).</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.AppendPicture(System.String)">
      <summary>
            Appends picture to this <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> instance.
            </summary>
      <param name="fileName">The fileName of the file that contains picture.</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.HeaderFooterSection.AppendPicture(System.String,System.Int32,System.Int32)">
      <summary>
            Appends picture to this <see cref="T:GemBox.Spreadsheet.HeaderFooterSection" /> instance.
            </summary>
      <param name="fileName">The fileName of the file that contains picture.</param>
      <param name="width">Picture width (in pixels).</param>
      <param name="height">Picture height (in pixels).</param>
      <returns>A reference to this instance after the append operation has completed.</returns>
    </member>
    <member name="P:GemBox.Spreadsheet.HeaderFooterSection.Content">
      <summary>
            Gets or sets <see cref="T:GemBox.Spreadsheet.HeaderFooter">header/footer</see> section content.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HorizontalAlignmentStyle">
      <summary>
            Horizontal alignment styles used for <see cref="P:GemBox.Spreadsheet.CellStyle.HorizontalAlignment">
            CellStyle.HorizontalAlignment</see>.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.General">
      <summary>
            Aligns data depending on the data type (text, number, etc.). Consult Microsoft Excel documentation.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Left">
      <summary>
            Left alignment.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Center">
      <summary>
            Center alignment.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Right">
      <summary>
            Right alignment.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Fill">
      <summary>
            Fill alignment repeats cell data to fill the whole cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Justify">
      <summary>
            Justify alignment.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.CenterAcross">
      <summary>
            Centered across selection. Multiple cells can be selected but only one should have value for this alignment to have effect.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HorizontalAlignmentStyle.Distributed">
      <summary>
            Distributed alignment.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HorizontalPageBreak">
      <summary>
            Specifies a horizontal position where the new page begins when the worksheet is printed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HorizontalPageBreak.FirstColumn">
      <summary>
            Index of the first column of the new page.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HorizontalPageBreak.LastColumn">
      <summary>
            Index of the last column of the new page.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HorizontalPageBreak.Row">
      <summary>
            Index of the first row of the new page.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HorizontalPageBreakCollection">
      <summary>
            Collection of horizontal page breaks (<see cref="T:GemBox.Spreadsheet.HorizontalPageBreak" />).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HorizontalPageBreakCollection.Add(System.Int32)">
      <summary>
            Ads a new horizontal page break above the specified row.
            </summary>
      <param name="row">The zero-based index of the row.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.HorizontalPageBreakCollection.Add(System.Int32,System.Int32,System.Int32)">
      <summary>
            Ads a new horizontal page break above the specified row and within specified columns.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="firstColumn">The zero-based index of the first column.</param>
      <param name="lastColumn">The zero-based index of the last column.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.HorizontalPageBreakCollection.Item(System.Int32)">
      <summary>
            Gets or sets the horizontal page break at the specified index.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HtmlLoadOptions">
      <summary>
            Represents options for loading from HyperText Markup Language File (HTML) format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HtmlLoadOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.HtmlLoadOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlLoadOptions.Encoding">
      <summary>
            Gets or sets the encoding for the HTML file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlLoadOptions.ParseFormatProvider">
      <summary>
            Gets or sets the format provider for the HTML file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlLoadOptions.ParseNumbers">
      <summary>
            Gets or sets a value indicating whether numbers will be parsed and stored as <see cref="T:System.Double" /> value when loading HTML file. If <see langword="false" />, numbers will be loaded as strings.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HtmlSaveOptions">
      <summary>
            Represents options for saving to HyperText Markup Language File (HTML) format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.HtmlSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.HtmlSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.Encoding">
      <summary>
            Gets or sets the encoding for the Html file.
            </summary>
      <exception cref="T:System.ArgumentNullException">Value is set to <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.FilesDirectoryPath">
      <summary>
            Gets or sets the physical directory where <see cref="T:GemBox.Spreadsheet.ExcelPicture" />s and <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />s files will be saved.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.FilesDirectorySrcPath">
      <summary>
            Gets or sets the relative directory that will be used when referencing <see cref="T:GemBox.Spreadsheet.ExcelPicture" />s and <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />s files in the HTML.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.HtmlType">
      <summary>
            Gets or sets the type of export.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to HTML file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.PicturesDirectoryImgSrcPath">
      <summary>
            Gets or sets the pictures directory that will be used when referencing images in the HTML and Javascript.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.PicturesDirectoryPath">
      <summary>
            Gets or sets the directory where <see cref="T:GemBox.Spreadsheet.ExcelPicture" />s will be physically saved.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.SelectionType">
      <summary>
            Gets or sets a value indicating whether to save the whole <see cref="T:GemBox.Spreadsheet.ExcelFile" /> or just <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.HtmlSaveOptions.WriteCellAddress">
      <summary>
            Gets or sets a value indicating whether each td HTML element should contain data-cell attribute with cell address for this cell.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.HtmlType">
      <summary>
            Defines type of HTML export.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HtmlType.Html">
      <summary>
            Export entire HTML document. Pictures are exported only if <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String)" /> or <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> overload is used or if <see cref="P:GemBox.Spreadsheet.HtmlSaveOptions.FilesDirectoryPath" /> is specified.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HtmlType.HtmlTable">
      <summary>
            Export HTML table and its content. Pictures are exported only if <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String)" /> or <see cref="M:GemBox.Spreadsheet.ExcelFile.Save(System.String,GemBox.Spreadsheet.SaveOptions)" /> overload is used or if <see cref="P:GemBox.Spreadsheet.HtmlSaveOptions.FilesDirectoryPath" /> is specified.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.HtmlType.Mhtml">
      <summary>
            Export entire HTML document and images to MIME HTML (MHTML) format. Pictures are always exported.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ImageSaveFormat">
      <summary>
            An enumeration of supported image file formats when saving the <see cref="T:GemBox.Spreadsheet.ExcelFile" /> to an image using a <see cref="T:GemBox.Spreadsheet.ImageSaveOptions" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Bmp">
      <summary>
            Bitmap (BMP) format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Gif">
      <summary>
            Graphics Interchange Format (GIF).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Jpeg">
      <summary>
            Joint Photographics Experts Group (JPEG) format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Png">
      <summary>
            Portable Network Graphics (PNG) format.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Tiff">
      <summary>
            Tagged Image File Format (TIFF).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ImageSaveFormat.Wmp">
      <summary>
            Windows Media Photo format.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ImageSaveOptions">
      <summary>
            Represents a class which stores saving options for image files.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ImageSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.ImageSaveOptions" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.ImageSaveOptions.#ctor(GemBox.Spreadsheet.ImageSaveFormat)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.ImageSaveOptions" /> class for a specific image format.
            </summary>
      <param name="imageFormat">The image format.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.Format">
      <summary>
            Gets or sets the image format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.Height">
      <summary>
            Gets or sets the image height in pixels.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to image file formats.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.MetafileScaleFactor">
      <summary>
      Gets or sets the scaling factor for rendering metafile (WMF and EMF) images. Greater scaling factor improves quality but also increases file size. Default value is 1.
    </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.PageNumber">
      <summary>
            Gets or sets the zero-based page number of the document's page which should be saved to an image.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.SelectionType">
      <summary>
            Gets or sets a value indicating whether to save a page from the whole <see cref="T:GemBox.Spreadsheet.ExcelFile" /> or just <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.ImageSaveOptions.Width">
      <summary>
            Gets or sets the image width in pixels.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.IndividualBorder">
      <summary>
            Different borders that can be set on excel cell. Members of this enumeration can't be combined.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.Top">
      <summary>
            Top border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.Bottom">
      <summary>
            Bottom border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.Left">
      <summary>
            Left border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.Right">
      <summary>
            Right border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.DiagonalUp">
      <summary>
            Diagonal-up border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IndividualBorder.DiagonalDown">
      <summary>
            Diagonal-down border.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.InsertDataTableOptions">
      <summary>
            Represents options for inserting data from <see cref="T:System.Data.DataTable" /> to <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.InsertDataTableOptions.#ctor">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.InsertDataTableOptions" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.InsertDataTableOptions.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.InsertDataTableOptions" /> class.
            </summary>
      <param name="startRow">Index of the first row of inserted data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
      <param name="startColumn">Index of the first column of inserted data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.InsertDataTableOptions.#ctor(System.String)">
      <summary>
            Initializes an instance of <see cref="T:GemBox.Spreadsheet.InsertDataTableOptions" /> class.
            </summary>
      <param name="startCell">Name of the first (top left) cell of inserted data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.InsertDataTableOptions.ColumnHeaders">
      <summary>
            Gets or sets a value indicating whether to insert column headers.
            </summary>
    </member>
    <member name="E:GemBox.Spreadsheet.InsertDataTableOptions.DataTableCellToExcelCellConverting">
      <summary>
            Event that fires when converting <see cref="T:System.Data.DataTable" /> cell value to <see cref="T:GemBox.Spreadsheet.ExcelCell" /> value.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.InsertDataTableOptions.StartColumn">
      <summary>
            Gets or sets the index of the first column of inserted data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.InsertDataTableOptions.StartRow">
      <summary>
            Gets or sets the index of the first row of inserted data in <see cref="T:GemBox.Spreadsheet.ExcelWorksheet" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.IoOperation">
      <summary>
            Possible operations that can fire notification events.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IoOperation.XlsReading">
      <summary>
            XLS reading methods.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IoOperation.CsvReading">
      <summary>
            CSV reading methods.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IoOperation.XlsWriting">
      <summary>
            XLS writing methods.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IoOperation.CsvWriting">
      <summary>
            CSV writing methods.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IoOperation.XlsxReading">
      <summary>
            XLSX reading methods.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IoOperation.XlsxWriting">
      <summary>
            XLSX writing methods.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IoOperation.OdsReading">
      <summary>
            ODS reading methods.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.IoOperation.OdsWriting">
      <summary>
            ODS writing methods.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.IoWarningEventArgs">
      <summary>
            Warning event arguments class used by the event which is raised on warning happens in the excel lite library
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.IoWarningEventArgs.FileName">
      <summary>
            Gets the file name passed to the XLS / CSV file reading / writing method.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.IoWarningEventArgs.Operation">
      <summary>
            Indicates which operation caused this event to fire.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.IoWarningEventArgs.WarningMsg">
      <summary>
            Gets the message explaining the specific warning.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.IoWarningEventHandler">
      <summary>
            Delegate for handling the notification events.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.LengthUnit">
      <summary>
            Represents the measurement unit for measuring length or distance.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Pixel">
      <summary>
            Pixel (1 inch is equal as 96 pixels). 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Point">
      <summary>
            Point (1 inch is equal as 72 points).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Inch">
      <summary>
            Inch.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Millimeter">
      <summary>
            Millimeter (10 millimeters are equal as 1 centimeter).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Centimeter">
      <summary>
            Centimeter (1 inch is around 2.54 centimeters).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Twip">
      <summary>
            Twip (twentieth of a point, 1 point is equal as 20 twips).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.Emu">
      <summary>
            English Metric Unit (1 point is equal as 12,700 EMUs)
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.ZeroCharacterWidth256thPart">
      <summary>
            Unit is 1/256th of the width of the zero character in default font (width of zero character is fixed to 7 pixel).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LengthUnit.ZeroCharacterWidth">
      <summary>
            Unit is the width of the zero character in default font (width of zero character is fixed to 7 pixel).
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.LengthUnitConverter">
      <summary>
            Utility class used for converting values between various <see cref="T:GemBox.Spreadsheet.LengthUnit" /> measurement units.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.LengthUnitConverter.Convert(System.Double,GemBox.Spreadsheet.LengthUnit,GemBox.Spreadsheet.LengthUnit)">
      <summary>
            Converts the specified <paramref name="length" /> from <paramref name="sourceUnit" /> measurement unit to <paramref name="destinationUnit" /> measurement unit.
            </summary>
      <param name="length">The length that will be converted.</param>
      <param name="sourceUnit">The source measurement unit.</param>
      <param name="destinationUnit">The destination measurement unit.</param>
      <returns>The <paramref name="length" /> expressed in <paramref name="destinationUnit" /> measurement unit.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.LimitEventArgs">
      <summary>
            Event parameters used for the <see cref="E:GemBox.Spreadsheet.ExcelFile.LimitNear">ExcelFile.LimitNear</see> and <see cref="E:GemBox.Spreadsheet.ExcelFile.LimitReached">ExcelFile.LimitReached</see> events.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LimitEventArgs.FileName">
      <summary>
            Gets the file name passed to the XLS / CSV file reading / writing method.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LimitEventArgs.MaxRowCount">
      <summary>
            Gets the maximum number of rows used.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LimitEventArgs.Operation">
      <summary>
            Indicates which operation caused this event to fire.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LimitEventArgs.WorksheetCount">
      <summary>
            Gets the number of worksheets used.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LimitEventArgs.WriteWarningWorksheet">
      <summary>
            Gets or sets whether the warning worksheet should be created when writing XLS file.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.LimitEventHandler">
      <summary>
            Delegate for handling the <see cref="E:GemBox.Spreadsheet.ExcelFile.LimitNear">ExcelFile.LimitNear</see> and <see cref="E:GemBox.Spreadsheet.ExcelFile.LimitReached">ExcelFile.LimitReached</see> events.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.LineStyle">
      <summary>
            Line styles used for 
            <see cref="P:GemBox.Spreadsheet.CellBorder.LineStyle">CellBorder.LineStyle</see>.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.None">
      <summary>
            No line.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Thin">
      <summary>
            Thin line.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Medium">
      <summary>
            Medium line.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Dashed">
      <summary>
            Dashed line.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Dotted">
      <summary>
            Dotted line.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Thick">
      <summary>
            Thick line.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Double">
      <summary>
            Double line.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.Hair">
      <summary>
            Hair line.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.MediumDashed">
      <summary>
            Medium dashed line.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.DashDot">
      <summary>
            Dash-dot line.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.MediumDashDot">
      <summary>
            Medium dash-dot line.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.DashDotDot">
      <summary>
            Dash-dot-dot line.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.MediumDashDotDot">
      <summary>
            Medium dash-dot-dot line.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.LineStyle.SlantDashDot">
      <summary>
            Slanted dash-dot line.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.LoadOptions">
      <summary>
            Represents a base class for loading options of various file formats.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.CsvDefault">
      <summary>
            Gets the default options for loading from Character Separated Values file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.HtmlDefault">
      <summary>
            Gets the default options for loading from HyperText Markup Language File (HTML) format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.OdsDefault">
      <summary>
            Gets the default options for loading from OpenDocument Spreadsheet file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.XlsDefault">
      <summary>
            Gets the default options for loading from XLS file format (Microsoft Excel Spreadsheet format; Excel 2003 and prior versions) .
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.LoadOptions.XlsxDefault">
      <summary>
            Gets the default options for loading from XLSX file format (Microsoft Excel Open XML Spreadsheet; Excel 2007 and later).
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.MultipleBorders">
      <summary>
            Flags for borders and border groups that can be set on the excel cell. 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.None">
      <summary>
            None of the borders are used.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Top">
      <summary>
            Top border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Bottom">
      <summary>
            Bottom border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Left">
      <summary>
            Left border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Right">
      <summary>
            Right border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.DiagonalUp">
      <summary>
            Diagonal-up border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.DiagonalDown">
      <summary>
            Diagonal-down border.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Horizontal">
      <summary>
            Horizontal borders.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Vertical">
      <summary>
            Vertical borders.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Diagonal">
      <summary>
            Diagonal borders.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.Outside">
      <summary>
            Outside borders.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.MultipleBorders.All">
      <summary>
            All borders are used.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.NamedRange">
      <summary>
            Represents a named range in the worksheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRange.Delete">
      <summary>
            Deletes this named range from the named ranges collection.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRange.GlobalName">
      <summary>
            gets global flag
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRange.Name">
      <summary>
            Gets the named range name.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRange.Range">
      <summary>
            Gets or sets the named cell range.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.NamedRangeCollection">
      <summary>
            Collection of the descriptive names which are used 
            to represent cells, ranges of cells, formulas, or constant values.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.Add(System.String,GemBox.Spreadsheet.CellRange)">
      <summary>
            Adds a new named range. Named ranges are used to represent cells, ranges of cells,
            formulas or constant values.
            </summary>
      <param name="name">The user-defined name.</param>
      <param name="range">The range to be refered by name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.Add(System.String,GemBox.Spreadsheet.CellRange,System.Boolean)">
      <summary>
            Adds a new named range. Named ranges are used to represent cells, ranges of cells,
            formulas or constant values.
            </summary>
      <param name="name">The user-defined name.</param>
      <param name="range">The range to be refered by name.</param>
      <param name="globalName">sets the range as global if set to true</param>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRangeCollection.Count">
      <summary>
            Gets the number of named ranges contained in the collection.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" />
            that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRangeCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.NamedRange" /> at the specified index.
            </summary>
      <param name="index">Range index.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.NamedRangeCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:GemBox.Spreadsheet.NamedRange" /> with the specified name.
            </summary>
      <param name="name">Range name.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.SetPrintArea(GemBox.Spreadsheet.CellRange)">
      <summary>
            Sets print area.
            </summary>
      <param name="range">Range of cells that we want set as print area.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.SetPrintTitles(GemBox.Spreadsheet.ExcelColumn,System.Int32)">
      <summary>
            Sets print titles (columns to repeat at left).
            </summary>
      <param name="startColumn">First column.</param>
      <param name="numberOfColumns">Number of columns that repeat.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.SetPrintTitles(GemBox.Spreadsheet.ExcelRow,System.Int32)">
      <summary>
            Sets print titles (rows to repeat at top).
            </summary>
      <param name="startRow">First row.</param>
      <param name="numberOfRows">Number of rows that repeat.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.SetPrintTitles(GemBox.Spreadsheet.ExcelRow,System.Int32,GemBox.Spreadsheet.ExcelColumn,System.Int32)">
      <summary>
            Sets print titles.
            </summary>
      <param name="startRow">First row.</param>
      <param name="numberOfRows">Number of rows that repeat.</param>
      <param name="startColumn">First column.</param>
      <param name="numberOfColumns">Number of columns that repeat.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.NamedRangeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" />
            that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.OdsLoadOptions">
      <summary>
            Represents options for loading from OpenDocument Spreadsheet file format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.OdsLoadOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.OdsLoadOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.OdsLoadOptions.PreserveUnsupportedFeatures">
      <summary>
            Gets or sets a value indicating whether to preserve ODS file format features that are not directly supported through GemBox.Spreadsheet object model.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.OdsLoadOptions.ReadDisplayValues">
      <summary>
            Read display values instead of stored values. 
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.OdsOptions">
      <summary>
            Options specified when loading ODS files.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.OdsOptions.None">
      <summary>
            Do not preserve ODS parts and ignore display values (display strings). Only parts recognized 
            by GemBox.Spreadsheet API will be loaded.
            Use this if you are just loading ODS file or you don't want to preserve unrecognized 
            ODS parts for next save.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.OdsOptions.PreserveKeepOpen">
      <summary>
            Preserves unrecognized ODS parts in a way it keeps loaded file open. Use if locking of input file
            for reading is not a problem and you want to save RAM/CPU when working with large files.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.OdsOptions.PreserveMakeCopy">
      <summary>
            Preserves unrecognized ODS parts in a way it makes a copy of input file in memory. Use if 
            locking of input file presents a problem or you are not working with large files.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.OdsOptions.ReadDisplayValues">
      <summary>
            Reads display values instead of stored values. Values in ODS are stored as value - display string pairs.
            Normally stored value is read but that looses number formatting. If you want to read value as
            formatted display string (for example, date as "Wednesday, May 5th, 2009" string), set this flag.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.OdsSaveOptions">
      <summary>
            Represents options for saving to OpenDocument Spreadsheet file format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.OdsSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.OdsSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.OdsSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to ODS file format.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PageBreak">
      <summary>
            Base class for all page breaks.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PageBreakCollection">
      <summary>
            Base class for page break collections.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreakCollection.Clear">
      <summary>
            Removes all page breaks. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PageBreakCollection.Count">
      <summary>
            Gets the number of page breaks contained in the collection. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreakCollection.GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreakCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the page break at the specified index.
            </summary>
      <param name="index">The zero-based index of the page break to remove.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.PageBreakCollection`1">
      <summary>
            Generic base class for page break collections.
            </summary>
      <typeparam name="T">Type of the items in the collection, either <see cref="T:GemBox.Spreadsheet.HorizontalPageBreak" /> or <see cref="T:GemBox.Spreadsheet.VerticalPageBreak" />.</typeparam>
    </member>
    <member name="M:GemBox.Spreadsheet.PageBreakCollection`1.GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>An enumerator for the collection.</returns>
    </member>
    <member name="T:GemBox.Spreadsheet.PanePosition">
      <summary>
            Represents the position of the pane.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanePosition.BottomRight">
      <summary>
            Bottom right pane.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanePosition.TopRight">
      <summary>
            Top right pane.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanePosition.BottomLeft">
      <summary>
            Bottom left pane.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanePosition.TopLeft">
      <summary>
            Top left pane.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PanesState">
      <summary>
            Represents the state of the pane.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanesState.Frozen">
      <summary>
            Panes are frozen, but were not split being frozen. In this state, when the panes are unfrozen again, a single pane results, with no split. In this state, the split bars are not adjustable.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanesState.FrozenSplit">
      <summary>
            Panes are frozen and were split before being frozen. In this state, when the panes are unfrozen again, the split remains, but is adjustable.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PanesState.Split">
      <summary>
            Panes are split, but not frozen. In this state, the split bars are adjustable by the user.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PaperType">
      <summary>
            Specifies the paper type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.A3">
      <summary>
            A3 (11.69 inch X 16.54 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.A4">
      <summary>
            A4 (8.27 inch X 11.69 inch). 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.A5">
      <summary>
            A5 (5.83 inch X 8.27 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.A6">
      <summary>
            A6 (4.13 inch X 5.83 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.B4">
      <summary>
            B4 (JIS, 7.17 inch X 10.12 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.B5">
      <summary>
            B5 (ISO, 6.93 inch X 9.84 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.Letter">
      <summary>
            Letter (8.5 inch X 11 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.Legal">
      <summary>
            Legal (8.5 inch X 14 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.Executive">
      <summary>
            Executive (7.25 inch X 10.5 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.Paper11x17">
      <summary>
            11x17 (11 inch X 17 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.EnvelopeDL">
      <summary>
            Envelope DL (4.33 inch X 8.66 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.EnvelopeC5">
      <summary>
            Envelope C5 (6.38 inch X 9.02 inch).
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PaperType.Custom">
      <summary>
            Custom paper type.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PdfSaveOptions">
      <summary>
            Represents options for saving to Portable Document Format (PDF) file.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PdfSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.PdfSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to PDF file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.MetafileScaleFactor">
      <summary>
      Gets or sets the scaling factor for rendering metafile (WMF and EMF) images. Greater scaling factor improves quality but also increases file size. Default value is 1.
    </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PdfSaveOptions.SelectionType">
      <summary>
            Gets or sets a value indicating whether to save the whole <see cref="T:GemBox.Spreadsheet.ExcelFile" /> or just <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PositioningMode">
      <summary>
            Option that specify the behavior of the picture in the worksheet. 
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PositioningMode.FreeFloating">
      <summary>
            Picture will not move with any of the anchor cells.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PositioningMode.Move">
      <summary>
            Picture will move with the top left anchor cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.PositioningMode.MoveAndSize">
      <summary>
            Picture will move and resize with both anchor cells.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.PrintOptions">
      <summary>
            Specifies information about how a spreadsheet is printed.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PrintOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.PrintOptions" /> class.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.PrintOptions.#ctor(System.IO.MemoryStream)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.PrintOptions" /> class by using an XML stream (that contains a PrintTicket document) that complies with the XML Print Schema.
            </summary>
      <param name="xmlStream">An XML stream that describes a print job and conforms to the Print Schema.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlStream" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.CopyCount">
      <summary>
            Gets or sets the number of copies of the document to print.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.FromPage">
      <summary>
            Gets or sets the page index of the first page to print.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.MetafileScaleFactor">
      <summary>
      Gets or sets the scaling factor for rendering metafile (WMF and EMF) images. Greater scaling factor improves quality but also increases file size. Default value is 1.
    </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.PagesPerSheet">
      <summary>
            Gets or sets the number of pages that print on each printed side of a sheet of paper.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.SelectionType">
      <summary>
            Gets or sets a value indicating whether to save the whole <see cref="T:GemBox.Spreadsheet.ExcelFile" /> or just <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.PrintOptions.ToPage">
      <summary>
            Gets or sets the index of the last page to print.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.RangeIndexingMode">
      <summary>
            Indexing modes used by <see cref="T:GemBox.Spreadsheet.CellRange" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.RangeIndexingMode.Rectangular">
      <summary>
            Rectangular indexing mode. Rectangular cell range is higher than one row and wider than one column.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.RangeIndexingMode.Horizontal">
      <summary>
            Horizontal indexing mode. Horizontal cell range has 
            <see cref="P:GemBox.Spreadsheet.CellRange.Height">CellRange.Height</see> equal to 1.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.RangeIndexingMode.Vertical">
      <summary>
            Vertical indexing mode. Vertical cell range has 
            <see cref="P:GemBox.Spreadsheet.CellRange.Width">CellRange.Width</see> equal to 1.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.RowColumnResolutionMethod">
      <summary>
            Defines different methods of <see cref="T:GemBox.Spreadsheet.CellStyle" /> resolution.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.RowColumnResolutionMethod.RowOverColumn">
      <summary>
            Row has precedence over column.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.RowColumnResolutionMethod.ColumnOverRow">
      <summary>
            Column has precedence over row.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SaveOptions">
      <summary>
            Represents a base class for saving options of various file formats.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.CsvDefault">
      <summary>
            Gets the default options for saving to Character Separated Values file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.HtmlDefault">
      <summary>
            Gets the default options for saving to HyperText Markup Language File format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.ImageDefault">
      <summary>
            Gets the default options for saving to image formats.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.Limitations">
      <summary>
            Gets limitations for saving to a file formats.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.OdsDefault">
      <summary>
            Gets the default options for saving to OpenDocument Spreadsheet file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.PdfDefault">
      <summary>
            Gets the default options for saving to Portable Document Format file.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.XlsDefault">
      <summary>
            Gets the default options for saving to, XLS file format (Microsoft Excel Spreadsheet format; Excel 2003 and prior versions) .
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.XlsxDefault">
      <summary>
            Gets the default options for saving to XLSX file format (Microsoft Excel Open XML Spreadsheet; Excel 2007 and later).
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SaveOptions.XpsDefault">
      <summary>
            Gets the default options for saving to XML Paper Specification file format.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ScriptPosition">
      <summary>
            Script positions used in <see cref="P:GemBox.Spreadsheet.ExcelFont.ScriptPosition">ExcelFont.ScriptPosition</see>.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ScriptPosition.Normal">
      <summary>
            Normal script position.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ScriptPosition.Superscript">
      <summary>
            Displays script above normal position.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ScriptPosition.Subscript">
      <summary>
            Displays script below normal position.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SelectionType">
      <summary>
            Defines the selection which will be saved or printed.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SelectionType.ActiveSheet">
      <summary>
            Select <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SelectionType.EntireFile">
      <summary>
            Select all sheets in <see cref="T:GemBox.Spreadsheet.ExcelFile" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SheetHeaderFooter">
      <summary>
            Represents sheet header/footer.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SheetHeaderFooter.#ctor">
      <summary>
        <see cref="T:GemBox.Spreadsheet.SheetHeaderFooter" /> constructor.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.AlignWithMargins">
      <summary>
            Gets or sets if header/footer margin will align with page margins.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.DefaultPage">
      <summary>
            Gets or sets default header/footer.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.DifferentFirst">
      <summary>
            Gets or sets if header/footer is different on the first page. 
            If <see langword="true" />, <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstHeader" /> and <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstFooter" /> are on the first page.
            If <see langword="false" />, <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstHeader" /> and <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstFooter" /> are ignored.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.DifferentOddEven">
      <summary>
            Gets or sets if there are different headers/footers on the even and odd pages.
            If <see langword="true" />, <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.Header" />/<see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.Footer" /> and <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenHeader" />/<see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenFooter" /> specify page header and footer values for odd
            and even pages. 
            If <see langword="false" /> then <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.Header" />/<see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.Footer" /> is used, even when <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenHeader" />/<see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenFooter" /> are present.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenFooter">
      <summary>
            Gets or sets even footer.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenHeader">
      <summary>
            Gets or sets even header.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenPage">
      <summary>
            Gets or sets header/footer for even pages.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstFooter">
      <summary>
            Gets or sets first footer.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstHeader">
      <summary>
            Gets or sets first header.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstPage">
      <summary>
            Gets or sets first page header/footer.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.Footer">
      <summary>
            Gets or sets default footer.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.HasEvenPage">
      <summary>
            Returns <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.EvenPage" /> header/footer is specified.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.HasFirstPage">
      <summary>
            Returns <see langword="true" /> if <see cref="P:GemBox.Spreadsheet.SheetHeaderFooter.FirstPage" /> header/footer is specified.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.Header">
      <summary>
            Gets or sets default header.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SheetHeaderFooter.ScaleWithDoc">
      <summary>
            Gets or sets if headers/footers will be scaled with document scaling.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SheetVisibility">
      <summary>
            Script positions used in <see cref="P:GemBox.Spreadsheet.ExcelWorksheet.Visibility">ExcelWorksheet.Visibility</see>.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SheetVisibility.Visible">
      <summary>
            Sheet is visible.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SheetVisibility.Hidden">
      <summary>
            Sheet is hidden, but is displayed in unhide dialog.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SheetVisibility.VeryHidden">
      <summary>
            Sheet is very hidden and can be made visible only programmatically
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SortDescription">
      <summary>
            Specifies the column, sorting order and optional custom comparison used in <see cref="M:GemBox.Spreadsheet.CellRange.Sort(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.SortDescription})" /> method.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SortDescription.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.SortDescription" /> class with specified sorting column index.
            Valid column indexes are between 0 and <see cref="P:GemBox.Spreadsheet.CellRange.LastColumnIndex" /> - <see cref="P:GemBox.Spreadsheet.CellRange.FirstColumnIndex" />, inclusive.
            </summary>
      <param name="columnRangeIndex">The column index in the <see cref="T:GemBox.Spreadsheet.CellRange" /> on which <see cref="M:GemBox.Spreadsheet.CellRange.Sort(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.SortDescription})" /> method has been invoked.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.SortDescription.#ctor(System.Int32,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.SortDescription" /> class with specified sorting column index and sort direction.
            Valid column indexes are between 0 and <see cref="P:GemBox.Spreadsheet.CellRange.LastColumnIndex" /> - <see cref="P:GemBox.Spreadsheet.CellRange.FirstColumnIndex" />, inclusive.
            </summary>
      <param name="columnRangeIndex">The column index in the <see cref="T:GemBox.Spreadsheet.CellRange" /> on which <see cref="M:GemBox.Spreadsheet.CellRange.Sort(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.SortDescription})" /> method has been invoked.</param>
      <param name="isAscending">A value indicating whether sort direction is ascending or descending.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.SortDescription.ColumnRangeIndex">
      <summary>
            Gets the column index in the <see cref="T:GemBox.Spreadsheet.CellRange" /> on which <see cref="M:GemBox.Spreadsheet.CellRange.Sort(System.Collections.Generic.IEnumerable{GemBox.Spreadsheet.SortDescription})" /> method has been invoked.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SortDescription.Comparison">
      <summary>
            Gets or sets the comparison that can be used to override default comparison.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SortDescription.IsAscending">
      <summary>
            Gets a value indicating whether sort direction is ascending or descending.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SpreadsheetException">
      <summary>
            Represents errors that can occur in the GemBox.Spreadsheet component. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.SpreadsheetException" /> class. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.SpreadsheetException" /> class with a specified error message. 
            </summary>
      <param name="msg">Message string.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.SpreadsheetException" /> class with a specified error message 
            and a reference to the inner exception that is the cause of this exception. 
            </summary>
      <param name="msg">Message string.</param>
      <param name="inner">Inner exception.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.SpreadsheetHyperlink">
      <summary>
            Hyperlink class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetHyperlink.IsExternal">
      <summary>
            Defines if hyperlink location is in this excel file.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetHyperlink.Location">
      <summary>
            Gets or sets the location string for hyperlink.
            <remarks>URL have to be in escaped format(You can use<see cref="M:System.Uri.EscapeUriString(System.String)">System.Uri.EscapeUriString</see> method).</remarks></summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetHyperlink.ToolTip">
      <summary>
            Gets or sets ToolTip for hyperlink.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection">
      <summary>
            Collection of hyperlinks (<see cref="T:GemBox.Spreadsheet.SpreadsheetHyperlink" />).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.Clear">
      <summary>
            Removes all hyperlinks. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.Count">
      <summary>
            Gets the number of hyperlinks contained in the collection. 
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>An enumerator for the collection.</returns>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the SpreadsheetHyperlink at the specified index.
            </summary>
      <param name="index">The zero-based index of the page break to remove.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetHyperlinkCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator for the collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="T:GemBox.Spreadsheet.SpreadsheetInfo">
      <summary>
            Contains static licensing methods and diagnostic information about executing GemBox.Spreadsheet assembly.
            </summary>
    </member>
    <member name="E:GemBox.Spreadsheet.SpreadsheetInfo.FreeLimitReached">
      <summary>
            Occurs in loading or saving <see cref="T:GemBox.Spreadsheet.ExcelFile" /> when GemBox.Spreadsheet assembly is used with <b>FREE-LIMITED-KEY</b> license key and free limit is reached.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetInfo.FullVersion">
      <summary>
            GemBox.Spreadsheet assembly full version.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.SpreadsheetInfo.SetLicense(System.String)">
      <summary>
            Call this method from your application to set GemBox.Spreadsheet serial key.
            </summary>
      <param name="serialKey">Serial key.</param>
    </member>
    <member name="F:GemBox.Spreadsheet.SpreadsheetInfo.Title">
      <summary>
            GemBox.Spreadsheet assembly title.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.UnderlineStyle">
      <summary>
            Underline styles used in <see cref="P:GemBox.Spreadsheet.ExcelFont.UnderlineStyle">ExcelFont.UnderlineStyle</see>.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.UnderlineStyle.None">
      <summary>
            No underline.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.UnderlineStyle.Single">
      <summary>
            Single underline. Underlines only cell data.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.UnderlineStyle.Double">
      <summary>
            Double underline. Underlines only cell data.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.UnderlineStyle.SingleAccounting">
      <summary>
            Single accounting underline. Underlines whole cell.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.UnderlineStyle.DoubleAccounting">
      <summary>
            Double accounting underline. Underlines whole cell.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.VerticalAlignmentStyle">
      <summary>
            Vertical alignment styles used for <see cref="P:GemBox.Spreadsheet.CellStyle.VerticalAlignment">
            CellStyle.VerticalAlignment</see>.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Top">
      <summary>
            Top alignment.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Center">
      <summary>
            Center alignment.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Bottom">
      <summary>
            Bottom alignment.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Justify">
      <summary>
            Justify alignment.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.VerticalAlignmentStyle.Distributed">
      <summary>
            Distributed alignment.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.VerticalPageBreak">
      <summary>
            Specifies a vertical position where the new page begins when the worksheet is printed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.VerticalPageBreak.Column">
      <summary>
            Index of the first column of the new page.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.VerticalPageBreak.FirstRow">
      <summary>
            Index of the first row of the new page.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.VerticalPageBreak.LastRow">
      <summary>
            Index of the last row of the new page.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.VerticalPageBreakCollection">
      <summary>
            Collection of vertical page breaks (<see cref="T:GemBox.Spreadsheet.VerticalPageBreak" />).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.VerticalPageBreakCollection.Add(System.Int32)">
      <summary>
            Ads a new vertical page break left to the specified column.
            </summary>
      <param name="column">The zero-based index of the column.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.VerticalPageBreakCollection.Add(System.Int32,System.Int32,System.Int32)">
      <summary>
            Ads a new vertical page break left to the specified column and within specified rows.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="firstRow">The zero-based index of the first row.</param>
      <param name="lastRow">The zero-based index of the last row.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.VerticalPageBreakCollection.Item(System.Int32)">
      <summary>
            Gets or sets the vertical page break at the specified index.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.ViewType">
      <summary>
            Specifies the view type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ViewType.Normal">
      <summary>
            Normal view
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ViewType.PageBreakPreview">
      <summary>
            Page break preview
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.ViewType.PageLayout">
      <summary>
            Page Layout View
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.WorksheetPanes">
      <summary>
            Represents the worksheet panes.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.WorksheetPanes.#ctor(GemBox.Spreadsheet.PanesState,System.Single,System.Single,System.String,GemBox.Spreadsheet.PanePosition)">
      <summary>
            Worksheet panes constructor.
            </summary>
      <param name="state">State of the panes.</param>
      <param name="xSplit">If the panes are frozen, xSplit represents the number of columns visible in the top right pane. If the panes are not frozen, xSplit represents the position of the split, in 1/20th of a point, 0 (zero) if none.</param>
      <param name="ySplit">If the panes are frozen, ySplit represents the number of rows visible in the top right pane. If the panes are not frozen, ySplit represents the position of the split, in 1/20th of a point, 0 (zero) if none.</param>
      <param name="topLeftCell">Top left visible cell in the bottom right pane.</param>
      <param name="activePane">Position of the active pane.</param>
    </member>
    <member name="M:GemBox.Spreadsheet.WorksheetPanes.#ctor(GemBox.Spreadsheet.WorksheetPanes)">
      <summary>
            Copy constructor.
            </summary>
      <param name="sourcePane">Source pane.</param>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetPanes.ActivePane">
      <summary>
            Gets or sets the active pane.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetPanes.State">
      <summary>
            Gets or sets the state of the panes.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetPanes.TopLeftCell">
      <summary>
            Gets or sets the top left visible cell in the bottom right pane. 
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetPanes.XSplit">
      <summary>
            Gets or sets the XSplit value.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetPanes.YSplit">
      <summary>
            Gets or sets the XSplit value.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.WorksheetProtection">
      <summary>
            Protection settings.
            Supported in XLSX only.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowDeletingColumns">
      <summary>
            Gets or sets if deleting columns is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowDeletingRows">
      <summary>
            Gets or sets if deleting rows is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowEditingObjects">
      <summary>
            Gets or sets if editing objects is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowEditingScenarios">
      <summary>
            Gets or sets if editing scenarios is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowFormattingCells">
      <summary>
            Gets or sets if formatting cells is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowFormattingColumns">
      <summary>
            Gets or sets if formatting columns is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowFormattingRows">
      <summary>
            Gets or sets if formatting rows is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowInsertingColumns">
      <summary>
            Gets or sets if inserting columns is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowInsertingHyperlinks">
      <summary>
            Gets or sets if inserting hyperlinks is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowInsertingRows">
      <summary>
            Gets or sets if inserting rows is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowSelectingLockedCells">
      <summary>
            Gets or sets if selecting locked cells is allowed.
            Default value is <see langword="true" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowSelectingUnlockedCells">
      <summary>
            Gets or sets if selecting unlocked cells is allowed.
            Default value is <see langword="true" />.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowSorting">
      <summary>
            Gets or sets if sorting is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowUsingAutoFilter">
      <summary>
            Gets or sets if using autofilter is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.AllowUsingPivotTableReports">
      <summary>
            Gets or sets if using pivot table reports is allowed.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.WorksheetProtection.PasswordHash">
      <summary>
            Gets or sets the password hash for protected sheet.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.WorksheetProtection.SetPassword(System.String)">
      <summary>
            Sets the password for protected sheet.
            </summary>
      <param name="password">The password.</param>
    </member>
    <member name="T:GemBox.Spreadsheet.XlsLoadOptions">
      <summary>
            Represents options for loading from XLS file format (Microsoft Excel Spreadsheet format; Excel 2003 and prior versions) .
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsLoadOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XlsLoadOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsLoadOptions.PreserveOptions">
      <summary>
            Gets or sets <see cref="T:GemBox.Spreadsheet.XlsOptions" />.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.XlsOptions">
      <summary>
            Options specified when reading XLS files.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsOptions.None">
      <summary>
            Do not preserve records. Only records fully supported by GemBox.Spreadsheet API will be loaded.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsOptions.PreserveGlobalRecords">
      <summary>
            Preserve global (workbook) records.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsOptions.PreserveWorksheetRecords">
      <summary>
            Preserve worksheet records.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsOptions.PreserveSummaries">
      <summary>
            Preserve summaries.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsOptions.PreserveMacros">
      <summary>
            Preserve macros and VBA code.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsOptions.PreserveAll">
      <summary>
            Preserve all possible information.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.XlsSaveOptions">
      <summary>
            Represents options for saving to, XLS file format (Microsoft Excel Spreadsheet format; Excel 2003 and prior versions) .
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XlsSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to XLS file format.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.XlsxLoadOptions">
      <summary>
            Represent options for loading from XLSX file format (Microsoft Excel Open XML Spreadsheet; Excel 2007 and later).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsxLoadOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XlsxLoadOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxLoadOptions.Password">
      <summary>
            Gets or sets the password to open protected / encrypted workbook.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxLoadOptions.PreserveUnsupportedFeatures">
      <summary>
            Gets or sets a value indicating whether to preserve XLSX file format features that are not directly supported through GemBox.Spreadsheet object model.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.XlsxOptions">
      <summary>
            Options specified when reading XLSX files.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxOptions.None">
      <summary>
            Do not preserve XLSX parts. Only parts recognized by GemBox.Spreadsheet API will be loaded.
            Use this if you are just loading XLSX file or you don't want to preserve unrecognized 
            XLSX parts for next save.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxOptions.PreserveKeepOpen">
      <summary>
            Preserves unrecognized XLSX parts in a way it keeps loaded file open. Use if locking of input file
            for reading is not a problem and you want to save RAM/CPU when working with large files.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxOptions.PreserveMakeCopy">
      <summary>
            Preserves unrecognized XLSX parts in a way it makes a copy of input file in memory. Use if 
            locking of input file presents a problem or you are not working with large files.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.XlsxSaveOptions">
      <summary>
            Represent options for saving to XLSX file format (Microsoft Excel Open XML Spreadsheet; Excel 2007 and later).
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.XlsxSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XlsxSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to XLSX file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxSaveOptions.Password">
      <summary>
            Gets or sets the password used to protect / encrypt the workbook.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XlsxSaveOptions.Type">
      <summary>
            Specifies type of generated file. Set this property only if you want to override default type.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.XlsxType">
      <summary>
            OpenXML file type.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxType.Xlsx">
      <summary>
            Excel 2007 XML Workbook.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxType.Xlsm">
      <summary>
            Excel 2007 XML Macro-Enabled Workbook.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxType.Xltx">
      <summary>
            Excel 2007 XML Template.
            </summary>
    </member>
    <member name="F:GemBox.Spreadsheet.XlsxType.Xltm">
      <summary>
            Excel 2007 XML Macro-Enabled Template.
            </summary>
    </member>
    <member name="T:GemBox.Spreadsheet.XpsSaveOptions">
      <summary>
            Represents options for saving to XML Paper Specification file format.
            </summary>
    </member>
    <member name="M:GemBox.Spreadsheet.XpsSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GemBox.Spreadsheet.XpsSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XpsSaveOptions.Limitations">
      <summary>
            Gets limitations for saving to XPS file format.
            </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XpsSaveOptions.MetafileScaleFactor">
      <summary>
      Gets or sets the scaling factor for rendering metafile (WMF and EMF) images. Greater scaling factor improves quality but also increases file size. Default value is 1.
    </summary>
    </member>
    <member name="P:GemBox.Spreadsheet.XpsSaveOptions.SelectionType">
      <summary>
            Gets or sets a value indicating whether to save the whole <see cref="T:GemBox.Spreadsheet.ExcelFile" /> or just <see cref="P:GemBox.Spreadsheet.ExcelWorksheetCollection.ActiveWorksheet" />.
            </summary>
    </member>
  </members>
</doc>